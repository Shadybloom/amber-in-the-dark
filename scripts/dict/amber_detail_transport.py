#----
# Заметки:
    # TODO: Товары >100 бит/тонна удобно возить на планёрах в пределах региона (26 бит за 300 км)
        # Импортные фрукты с 50% воздушной доставкой стоят ×4 к местным, но менее 100 бит/тонна.
        # 'Кантонные грузоперевозки, воздушные (брутто) (килограмм)':1,
        # 'Окружные грузоперевозки, воздушные (брутто) (килограмм)':1,
        # 'Региональные грузоперевозки, воздушные (брутто) (килограмм)':1,
    # amber -sm понивильский кантон -E "грузоперевозки"
    # amber -sm понивильский кантон -E "Маршрут"
    # amber -sm понивильский кантон -E "(тонно-километров)"

#----
# Энергозатраты транспортировки (первичная энергия топлива)
    # TODO: посчитай расход энергии и нормо-часов на тонно-километр перевозок для железных дорог.
    # Транспорт           | МДж/тонно-километр
    # ------------------- | ---------------------------
    # Самолёт             | 30 МДж/ткм
    # Грузовик (дизель)   | 1-2.5
    # Поезд (паровоз)     | 1.3-2.1 (1895 год, Германия)
    # Поезд (дизель)      | 0.6-0.9
    # Электропоезд        | 0.2-0.4
    # Малые суда          | 0.1-0.15
    # Танкеры и сухогрузы | 0.05 (50 кДж/ткм) 
    # Электровозы РЖД (по электроэнергии) -- 0.11 МДж/ткм (0.33-0.48 МДж/ткм угольной ТЭС)
    # Тепловозы РЖД (по дизельному топливу) -- 0.176 МДж/ткм
    # "Создание современного мира. Материалы и дематериализация." Вацлав Смил
# Удельный расход энергии (2013 год, РЖД)
    # Поезд                               | квт-час/10k_ткм | МДж/ткм
    # ----------------------------------- | --------------- | -------
    # Грузовой (равнинный профиль)        | 110             | 0.039
    # Грузовой (холмистый профиль)        | 120             | 0.043
    # Грузовой (горный профиль)           | 145             | 0.052
    # Грузовой порожний (горный)          | 210             | 0.076
    # Ускоренный контейнерный (равнинный) | 310             | 0.112
    # - Электровозы (по электроэнергии) -- 0.11 МДж/ткм (0.33-0.48 МДж/ткм угольной ТЭС)
    # - Тепловозы (по дизельному топливу) -- 0.176 МДж/ткм
    # "Использование энергетических ресурсов ОАО "РЖД" в 2013 г"
    # https://nkps.livejournal.com/37515.html?nojs=1
# Автотранспорт:
    # Автомобиль (900 кг стали 60% высокопрочной) -- 100 млн авто/год, это 90 млн тонн стали
    # Обеспеченность (РСФСР, 1991 год, 148 млн) -- 600 автомобилей и ??? грузовиков на 10 000 населения
    # Обеспеченность (РФ, 2009 год, 148 млн) -- 2250 автомобилей и ??? грузовиков на 10 000 населения
    # Обеспеченность (РФ, 2023 год, 150 млн) -- 3220 автомобилей и ~1000 грузовиков на 10 000 населения
    # Обеспеченность (Китай, 2011 год, 1338 млн) -- 1345 автомобилей и 224 грузовиков на 10 000 населения
    # Обеспеченность (Китай, 2020 год, 1411 млн) -- 1925 автомобилей и 215 грузовиков на 10 000 населения
    # Обеспеченность (США, 2016 год, 327 млн) -- 8073 автомобилей и грузовиков на 10 000 населения
    # Обеспеченность (США, 2022 год, 327 млн) -- 8528 автомобилей и грузовиков на 10 000 населения
    # Пробег (США, 2019 год) -- 5.2 трлн км, 19 700 км/автомобиль (300-500 часов/год, 100 часов/год пробки)
    # Пробег (Россия, 2019 год) -- 16 000 км/автомобиль (Россия, 2022 год) -- 18 700 км/автомобиль
    # Пробег 20 000 км/год -- топливо 2000 кг, смазочное масло 60 кг, 5-7% износа/год (~500 часов/год)
    # Техобслуживание (ЕО, ТО-1, ТО-2, ТР) (автомобиль, 16 000 км/год, 1984 СССР) -- 168 нормо-часов/год
    # Техобслуживание (ЕО, ТО-1, ТО-2, ТР) (грузовик до 12 тонн, 100-200k км/год) -- 240-530 нормо-часов/год
    # КПД автомобиля 1930-х годов -- 15 литров на 100 км
    # КПД автомобиля 1973 года -- 17.7 литров на 100 км (нефтяное эмбарго ОПЕК на США)
    # КПД автомобиля 1985 года -- 8.55 литра на 100 км
    # Аварии (СССР, 1920-1991 годы) -- 0.33 смерти на каждые 10 машин (30 млн машин 1 млн погибших)
    # Аварии (Мир, 2020 год) -- 1.4 травма и 0.13 смерти на каждые 10 машин (16 лет службы)
    # Аварии (Мир, 2015 год) -- 1.3 млн смертей/год на 1.25 млрд машин (1 смерть и 38 ранений на 69 машин)
    # Аварии (Мир, 2020 год) -- 1.2 млн смертей/год на 1.5 млрд машин (1 смерть и 11 ранений на 78 машин)
    # Аварии (США, 2021 год) -- 1.3 смертей/год на 10k населения
    # Аварии (Россия, 2023 год) -- 11.1 ранений и 1 смерть на 10k населения
    # Аварии (Россия, 2024 год) -- ??? ранений и 0.85 смертей на 10k населения (116 190 ДТП)
    # Пробег автомобилей (2023 год, Россия) -- 950 млрд км (1 смерть на 75 млн км)
    # Пробег электросамокатов (2024 год, Россия) -- 0.35-1 млрд км (1 смерть на 19 млн км)
    # Электросамокаты в 4 раза опаснее автомобилей (1 смерть на 19 млн км пробега vs 1 смерть на 75 млн км)
    # В смертельных авариях в 90% случаях погибает только один человек.
    # Алкоголь в крови к риску аварий (0.05 промилле) -- ×5.7 раза.
    # Города СССР планировались на 1200 автомобилей на 10 000 жителей.
    # "Парадокс Рубена Смида" -- рост числа машин по гиперболе сокращает аварии из-за правил и привычек.
    # "ПОЛОЖЕНИЕ О ТЕХНИЧЕСКОМ ОБСЛУЖИВАНИИ И РЕМОНТЕ ПОДВИЖНОГО СОСТАВА АВТОМОБИЛЬНОГО ТРАНСПОРТА 1984"
    # https://normativ.kontur.ru/document?moduleId=1&documentId=131510
    # https://altyn73.livejournal.com/1485889.html
# Статистика ООН по странам (2000-2024 годы)
    # Дороги суммарно Миллион тонн-км:
    # https://w3.unece.org/PXWeb/ru/Table?IndicatorCode=51
    # Железнодорожные грузоперевозки Миллион тонн-км.
    # https://w3.unece.org/PXWeb/ru/Table?IndicatorCode=53
    # Миллион пассажиро-километров
    # https://w3.unece.org/PXWeb/ru/Table?IndicatorCode=52
    # https://w3.unece.org/PXWeb/ru/Table?IndicatorCode=60
    # Грузоперевозки по внутренним водным путям Миллион тонн-км.
    # https://w3.unece.org/PXWeb/ru/Table?IndicatorCode=55
    # Общая длина внутренних водных путей Километры
    # https://w3.unece.org/PXWeb/ru/Table?IndicatorCode=58
# Inland transport infrastructure spending (2021):
    # China -- 4.8% of GDP (5.5 млн км дорог, >150k км шоссе)
    # USA -- 0.5% (7.2 млн км дорог, 109k км шоссе)
    # Germany -- 0.8%
    # Russia -- 0.95%
    # https://nonews.co/directory/lists/countries/roadways-total-length

#----
# Железные дороги (Германия 1895 года, 52.5 млн. человек)
    # Грузы в год -- 181 млн. тонн (3.5 тонн/человека)
    # Грузооборот -- 25 млрд. тонно-километров (138 км/тонна груза, 476 тонно-километров/человека)
    # Протяжённость дорог -- 45 000 километров, 0.81 метра/человека (33% имеют 2+ колеи)
    # Служащие -- 30 на 10 000 граждан (3.5 служащих/километр)
    # Рабочие -- 40 на 10 000 граждан (4.7 рабочих/километр)
# Парк машин (1894-1895 годы) -- 16 000 паровозов, 23 000 км/паровоз-год
    # Пассажирские вагоны -- 30 000 штук, 69 000 осей (43 места/вагон, 120 км/день)
    # Товарные вагоны -- 322 000 штук (11 тонн/вагон, 57 км/день, 562 тонны/вагон-год, 77 639 ткм/вагон-год)
    # Пассажирский/скорый поезд -- 16 осей, 8 вагонов, 340 мест.
# Мощность паровозов:
    # 1 пегас = 30 кВт-час
    # 1 кВт-час = 1.4 килограмма каменного угля (9% КПД)
    # Котловая лошадь (9.8 квт) = лошадиная сила (0.736 квт)
    # Горизонтальный путь, 50 тонно-километров/час = 0.4 кВт-час
    # Подъём в 5 на 1000 метров, 50 тонно-километров/час = 1.1 кВт
    # Энергозатраты перевозки (оценочно) -- 1.3-2.1 МДж/ткм (при 400-250 т груза)
    # Формула: 640 кВт / 400 тонн * (60*60) час / 50 км / 0.09 КПД / 1000 в МДж = 1.28 МДж/ткм
# Работа поездов:
    # Товарный поезд с 33 вагонами (400 тонн) -- 640 кВт
    # Пассажирский поезд с 8+2 вагонами (150 тонн) -- 210 кВт
    # Курьерский поезд с 8+2 вагонами, 100 км-час (200 тонн) -- 710 кВт

#----
# Флот, водные пути
    # Соединённые штаты Америки (1900 год, 76 млн. человек)
        # - Парусники 50+ тонн (1900 год) -- 3671 (370 тонн/судно)
        # - Пароходы 100+ тонн (1900 год) -- 674 (1756 тонн/судно)
        # По тоннажу до 200 тонн (25% парусников), 200-400 тонн (50% парусников).
        # В США 1900 года строили 2 судна/миллион жителей в год (в основном пароходы).
        # В 1900 году парусные суда составляли 20% флота.
        # Деревянные суда служат 10 лет, стальные -- 30 лет.
        # https://ru.wikisource.org/wiki/ЭСБЕ/Торговое_судостроение
        # https://ru.wikisource.org/wiki/ЭСБЕ/Торговое_мореходство
    # Российская Империя (1900 год, 136 млн. человек)
        # - Парусники 50+ тонн (1900 год) -- 2533 (189 тонн/судно)
        # - Пароходы 100+ тонн (1900 год) -- 489 (1012 тонн/судно)
        # 73% судов по количеству и 82% по тоннажу построено за границей.
        # - 2293 парусника (водоизмещение 117 тонн/судно)
        # - 745 пароходов (водоизмещение 490 тонн/судно)
        # - Тоннаж морского флота -- 633 800 тонн (4.7 кг/человека)
        # https://ru.wikisource.org/wiki/ЭСБЕ/Флот
        # https://istmat.org/node/65
        # Грузооборот российского морского судоходства в 1901 г.
            # - ввоз, 10 585 судов, 9.223 млн. тонн грузов (68 кг/человека)
            # - вывоз, 10 393 судов, 8.94 млн. тонн грузов (65 кг/человека)
        # Речной флот, Российская Империя (1896 год):
            # - Парусных -- 20 600
            # - Паровых -- 2500
            # Тоннаж флота -- 8 590 100 тонн (416 тонн/парусник?, 63 кг/человека)
            # На Волге, без притоков, 9000 судов -- 3 708 902 тонн (50% баржи)
            # Грузооборот речного флота (1880-1889 годы, средний):
            # - Европейская Россия (отправлено: 60 тыс. судов, 91 тыс плотов), 8.6 млн тонн груза, 203 млн. руб
            # - Бассейн Волги (отправлено: 28 тыс. судов, 34 тыс плотов), 4.7 млн тонн груза, 143 млн. руб
            # - Грузовые пристани -- 200/650 (Волга/Волжский бассейн)
            # Стоимость грузов -- 262.7 млн. рублей + 27 млн. рублей плоты.
            # На пристань (в среднем): 43 судна, 52 плота, 7231 тонн груза, 220 000 рублей оборота
            # В 1879-1888 годы построено -- 65 250 судов на 52 млн рублей (544-918 рублей/судно)
            # Большие суда (построены на Волге) -- 4085 судов на 8.1 млн рублей (2226 рублей/судно)
            # Меньшие суда (строились на притоках) -- 39 862 судов на 32.3 млн рублей (809 рублей/судно)
            # Волжские пароходы (1886 год) -- 854 судна (52 кВт, 67 тонн, 18 человек, 46 300 рублей/судно)
            # Пароходы прочих рек (1886 год) -- 653 судна (40 кВт, 30 500 рублей/судно)
            # Баржи (2143/9000 волжских парусников, 50% грузов) -- 865 тонн/баржа
            # https://ru.wikisource.org/wiki/ЭСБЕ/Волга
    # Германия (1895 год, 52.5 млн. человек):
        # Речной флот, Германия (1896 год):
            # - Рэйн (прошло: 35 тыс. судов), 7.9 млн тонн груза
            # https://ru.wikisource.org/wiki/ЭСБЕ/Рейн,_река
    # Франция (1894 год, 38.5 млн. человек):
        # - Парусники 50+ тонн (1900 год) -- 1396 (244 тонн/судно)
        # - Парусники 100+ тонн (1900 год) -- 545 (1945 тонн/судно)
        # Подразделение          | парус  | пароход  | тоннаж/судно | команда/судно
        # ---------------------- | ------ | -------- | ------------ | -------------
        # Прибрежное рыболовство | 10 464 | 58       | 8.8 тонн     | 5 человек
        # Морское рыболовство    |    498 | -        | 86           | 20
        # Прибрежное судоходство |   1426 | 146      | 44           | 4
        # Средиземное море       |    192 | 248      | 105          | 12
        # Дальнего плавания      |    266 | 174      | 536          | 21
        # Лоцманы, буксиры       |    378 | 415      | 11           | 4
        # Яхты                   |    146 | 97       | 20           | 4
        # Без употребления       |    936 | 97       | 24           | -
        # -------------------------------------------------------------------------
        # Пароходов -- 1196 судов, 491 972 тонн (411 тонн/судно, 13 кг/человека)
        # Парусных -- 14 332 судов, 398 567 тонн (28 тонн/судно, 10 кг/человека)
        # Команды -- 81 000 человек, 7400 механиков и кочегаров.
        # 6% флота (по тоннажу) простаивает в портах без употребления
        # https://ru.wikisource.org/wiki/ЭСБЕ/Франция
        # https://ru.wikisource.org/wiki/ЭСБЕ/Рыбная_торговля
        # Речной флот, Франция (1894 год):
            # Тоннаж флота -- 27 873 475 тонн (720 кг/человека)
            # Тоннаж пароходов -- 759 310 тонн пароходы (20 кг/человека)
        
#----
# Пассажирские перевозки (путешествия):
    # Пассажирооборот по видам транспорта (СССР, 1985 года, 276.3 млн. человек):
        # Автомобильного -- 446.6 млрд. пассажиро-километров (1618 км/человека, 9.5 км/пассажира)
        # Железнодорожного -- 374 млрд. пасс-км (1353 км/человека, 90 км/пассажира)
        # Воздушного -- 188.4 млрд. пасс-км (682 км/человека, 1673 км/пассажира)
        # Воздушного (всего, 2019 год) -- 68 трлн пасс-км, 4.2 млрд пассажиров, 1900 км/пассажир
    # Пассажиров перевезено:
        # Автомобильным -- 47 008 млн. человек (170 пассажиров/человека)
        # Железнодорожным -- 4166 млн. человек (15 пассажиров/человека)
        # Воздушным -- 112.6 млн. человек (0.4 пассажиров/человека)
    # Средний путь -- 3653 км/человека
    # Средняя подвижность населения:
        # Россия, 2011 -- 6300 км/человека
        # Западная Европа, 2011 -- 15-20 тыс. км/человека
        # США, Канада, 2011 -- 25-30 тыс. км/человека
    # В Эквестрии:
        # -Пассажирооборот воздушных путей (пассажиро-километров)...... | 999
        # -Пассажирооборот железнодорожных путей (пассажиро-километров) | 2,560
        # -Пассажирооборот морских путей (пассажиро-километров)........ | 112
        # -Пассажирооборот речных путей (пассажиро-километров)......... | 98
        # Всего -- 3769 км/пони

metadict_detail['Региональное путешествие (пони/день)'] = {
        # Один день -- одно путешествие. К друзьям, на ярмарку, за покупками.
        'Железнодорожное региональное путешествие (пони/день)':0.5,
        'Воздушное региональное путешествие (пони/день)':0.4,
        'Речное региональное путешествие (пони/день)':0.1,
        }

metadict_detail['Межрегиональное путешествие (пони/день)'] = {
        # Занимает около недели. На большие дистанции всегда удобнее поезд.
        'Железнодорожное межрегиональное путешествие (пони/день)':0.8,
        'Воздушное межрегиональное путешествие (пони/день)':0.1,
        'Речное межрегиональное путешествие (пони/день)':0.1,
        }

metadict_detail['Заграничное путешествие (пони/день)'] = {
        # Занимает около месяца. На средние расстояния лучше судно, на дальние планёр.
        'Морское заграничное путешествие (пони/день)':0.6,
        'Воздушное заграничное путешествие (пони/день)':0.4,
        }

#----
# Пассажирские перевозки (маршруты):

metadict_detail['Воздушное региональное путешествие (пони/день)'] = {
        # Занимает не больше суток.
            # Пул времени -- 16 часов
            # Пегасий планёр (80 км/час)
            # Пассажирский поезд (100 км/час)
            # Речная баржа (9 км/час)
            # В пределах 300 километров (среднее, 1/2 радиуса региона -- 100 км).
        # Три часа туда, три часа обратно. Пегасье такси.
        'Воздушное региональное путешествие, туда (часов)':1.25,
        'Воздушное региональное путешествие, обратно (часов)':1.25,
        'Воздушное региональное путешествие, на месте (часов)':21.5,
        '|===Пассажиронапряжённость региональных воздушных путей (пони/год)':1,
        }

metadict_detail['Железнодорожное региональное путешествие (пони/день)'] = {
        'Железнодорожное региональное путешествие, туда (часов)':1,
        'Железнодорожное региональное путешествие, обратно (часов)':1,
        'Железнодорожное региональное путешествие, на месте (часов)':22,
        '|===Пассажиронапряжённость региональных железнодорожных путей (пони/год)':1,
        }

metadict_detail['Речное региональное путешествие (пони/день)'] = {
        # 9 км/час. Путешествие длится 3 дня
        'Речное региональное путешествие, туда (часов)':12 / 3,
        'Речное региональное путешествие, обратно (часов)':12 / 3,
        'Речное региональное путешествие, на месте (часов)':((3 * 24) - 12 * 2) / 3,
        '|===Пассажиронапряжённость региональных речных путей (пони/год)':1 / 3,
        }

metadict_detail['Воздушное межрегиональное путешествие (пони/день)'] = {
        # Занимает в среднем 6 дней.
            # Пул времени -- 120 часов (60 часов активного времени)
            # В пределах 2000 километров (среднее 1000 километров)
            # Пассажирский планёр проходит 1000 километров за 13 часов. С пересменкой пегасов.
        'Воздушное межрегиональное путешествие, туда (часов)':13 / 6,
        'Воздушное межрегиональное путешествие, обратно (часов)':13 / 6,
        'Воздушное межрегиональное путешествие, на месте (часов)':((6 * 24) - 13 * 2) / 6,
        '|===Пассажиронапряжённость межрегиональных воздушных путей (пони/год)':1 / 6,
        }

metadict_detail['Железнодорожное межрегиональное путешествие (пони/день)'] = {
        # В среднем 1500 километров, 15 часов.
        'Железнодорожное межрегиональное путешествие, туда (часов)':15 / 6,
        'Железнодорожное межрегиональное путешествие, обратно (часов)':15 / 6,
        'Железнодорожное межрегиональное путешествие, на месте (часов)':((6 * 24) - 15 * 2) / 6,
        '|===Пассажиронапряжённость межрегиональных железнодорожных путей (пони/год)':1 / 6,
        }

metadict_detail['Речное межрегиональное путешествие (пони/день)'] = {
        # 9 км/час, 1000 километров за 112 часов. Месячное путешествие.
        'Речное межрегиональное путешествие, туда (часов)':112 / 30,
        'Речное межрегиональное путешествие, обратно (часов)':112 / 30,
        'Речное межрегиональное путешествие, на месте (часов)':((30 * 24) - 112 * 2) / 30,
        '|===Пассажиронапряжённость межрегиональных речных путей (пони/год)':1 / 30,
        }

metadict_detail['Воздушное заграничное путешествие (пони/день)'] = {
        # Занимает в среднем 30 дней.
            # Пул времени -- 720 часов (360 часов активного)
            # Пегасий планёр (80 км/час) -- 1200 км/сутки (с ночёвками в городах)
            # Яхта/шхуна/барк (13 км/час) -- 300 км/сутки
            # В пределах 6000 километров (среднее 2000 км).
        'Воздушное заграничное путешествие, туда (часов)':25 / 30,
        'Воздушное заграничное путешествие, обратно (часов)':25 / 30,
        'Воздушное заграничное путешествие, на месте (часов)':((30 * 24) - 25 * 2) / 30,
        '|===Пассажиронапряжённость заграничных воздушных путей (пони/год)':1 / 30,
        }

metadict_detail['Морское заграничное путешествие (пони/день)'] = {
        # 13 км/час. В пределах 2000 километров.
        'Морское заграничное путешествие, туда (часов)':160 / 30,
        'Морское заграничное путешествие, обратно (часов)':160 / 30,
        'Морское заграничное путешествие, на месте (часов)':((30 * 24) - 160 * 2) / 30,
        '|===Пассажиронапряжённость заграничных морских путей (пони/год)':1 / 30,
        }

#----
# Пассажирские перевозки (транспорт):

metadict_detail['Воздушное заграничное путешествие, обратно (часов)'] = {
        'Воздушное заграничное путешествие (часов/пассажир)':1,
        }

metadict_detail['Воздушное заграничное путешествие, туда (часов)'] = {
        'Воздушное заграничное путешествие (часов/пассажир)':1,
        }

metadict_detail['Воздушное межрегиональное путешествие, обратно (часов)'] = {
        'Воздушное межрегиональное путешествие (часов/пассажир)':1,
        }

metadict_detail['Воздушное межрегиональное путешествие, туда (часов)'] = {
        'Воздушное межрегиональное путешествие (часов/пассажир)':1,
        }

metadict_detail['Воздушное региональное путешествие, обратно (часов)'] = {
        'Воздушное региональное путешествие (часов/пассажир)':1,
        }

metadict_detail['Воздушное региональное путешествие, туда (часов)'] = {
        'Воздушное региональное путешествие (часов/пассажир)':1,
        }

metadict_detail['Железнодорожное межрегиональное путешествие, обратно (часов)'] = {
        'Железнодорожное межрегиональное путешествие (часов/пассажир)':1,
        }

metadict_detail['Железнодорожное межрегиональное путешествие, туда (часов)'] = {
        'Железнодорожное межрегиональное путешествие (часов/пассажир)':1,
        }

metadict_detail['Железнодорожное региональное путешествие, обратно (часов)'] = {
        'Железнодорожное региональное путешествие (часов/пассажир)':1,
        }

metadict_detail['Железнодорожное региональное путешествие, туда (часов)'] = {
        'Железнодорожное региональное путешествие (часов/пассажир)':1,
        }

metadict_detail['Морское заграничное путешествие, обратно (часов)'] = {
        'Морское заграничное путешествие (часов/пассажир)':1,
        }

metadict_detail['Морское заграничное путешествие, туда (часов)'] = {
        'Морское заграничное путешествие (часов/пассажир)':1,
        }

metadict_detail['Речное межрегиональное путешествие, обратно (часов)'] = {
        'Речное межрегиональное путешествие (часов/пассажир)':1,
        }

metadict_detail['Речное межрегиональное путешествие, туда (часов)'] = {
        'Речное межрегиональное путешествие (часов/пассажир)':1,
        }

metadict_detail['Речное региональное путешествие, обратно (часов)'] = {
        'Речное региональное путешествие (часов/пассажир)':1,
        }

metadict_detail['Речное региональное путешествие, туда (часов)'] = {
        'Речное региональное путешествие (часов/пассажир)':1,
        }

#----
# Пассажирские перевозки (транспорт):

metadict_detail['Воздушное заграничное путешествие (часов/пассажир)'] = {
        '_-Путь пассажирского планёра, тяжёлого (часов/пассажир)':1,
        }

metadict_detail['Воздушное межрегиональное путешествие (часов/пассажир)'] = {
        '_-Путь пассажирского планёра, тяжёлого (часов/пассажир)':0.9,
        '_-Путь пассажирского планёра, лёгкого (часов/пассажир)':0.1,
        }

metadict_detail['Воздушное региональное путешествие (часов/пассажир)'] = {
        '_-Путь пассажирского планёра, тяжёлого (часов/пассажир)':0.3,
        '_-Путь пассажирского планёра, лёгкого (часов/пассажир)':0.7,
        }

metadict_detail['Железнодорожное межрегиональное путешествие (часов/пассажир)'] = {
        '_-Путь пассажирского поезда (часов/пассажир)':1,
        }

metadict_detail['Железнодорожное региональное путешествие (часов/пассажир)'] = {
        '_-Путь пассажирского поезда (часов/пассажир)':1,
        }

metadict_detail['Морское заграничное путешествие (часов/пассажир)'] = {
        '_-Путь пассажирского барка (часов/пассажир)':0.4,
        '_-Путь пассажирского брига (часов/пассажир)':0.6,
        }

metadict_detail['Речное межрегиональное путешествие (часов/пассажир)'] = {
        '_-Путь пассажирской баржи (часов/пассажир)':1,
        }

metadict_detail['Речное региональное путешествие (часов/пассажир)'] = {
        '_-Путь пассажирской баржи (часов/пассажир)':1,
        }

#----
# Грузоперевозки (коррекция величин):

metadict_detail['Доставка промышленных товаров (тонн)'] = {
        # TODO: Сначала из килограмм в тонны, затем из тонн в килограммы. Нафига?
        'Доставка промышленных товаров (брутто) (килограмм)':1000,
        }

metadict_detail['Доставка строительного сырья (тонн)'] = {
        # TODO: Лес сплавляют без тары, да и прочее навалом.
            # Лес сплавляют на плотах, часто ещё и с грузом.
        'Доставка строительного сырья (брутто) (килограмм)':1000,
        }

metadict_detail['Доставка промышленного сырья (тонн)'] = {
        # Пряжа. Хлопок, лён, пенька.
        'Доставка промышленного сырья (брутто) (килограмм)':1000,
        }

metadict_detail['Доставка дров (тонн)'] = {
        'Доставка дров (брутто) (килограмм)':1000,
        }

metadict_detail['Доставка дров (Зебрика) (тонн)'] = {
        'Доставка дров (Зебрика) (брутто) (килограмм)':1000,
        }

metadict_detail['Доставка угля (тонн)'] = {
        'Доставка угля (брутто) (килограмм)':1000,
        }

metadict_detail['Вывоз мусора, твёрдого (тонн)'] = {
        'Вывоз мусора, твёрдого (брутто) (килограмм)':1000,
        }

metadict_detail['Вывоз мусора, жидкого (тонн)'] = {
        'Вывоз мусора, жидкого (брутто) (килограмм)':1000,
        }

metadict_detail['Вывоз мусора, строительного (тонн)'] = {
        'Вывоз мусора, строительного (брутто) (килограмм)':1000,
        }

metadict_detail['Доставка стройматериалов (тонн)'] = {
        'Доставка стройматериалов (брутто) (килограмм)':1000,
        }

#----
# Грузоперевозки (пирамиды снабжения):
    # Приусадебные грузоперевозки -- 100 - 300 метров (200 метров, 12 гектаров)
        # Селение: колодец, улица, усадьбы вдоль неё, огороды за усадьбами.
        # Основные направления:
        # - Колодец --> дом
        # - Огород --> дом
        # - Амбар --> дом
    # Сельские грузоперевозки -- 300 - 2000 метров (1100 метров, 380 гектаров)
        # Окрестности селения: сады, пашни, клеверные луга на севообороте.
        # Основные направления:
        # - Поле --> амбар
        # - Сад --> амбар
        # - Деревня --> селение
        # https://derpibooru.org/images/910636
    # Кантонные грузоперевозки -- 2 - 20 километров (11 километров, 400 кв. километров)
        # Вблизи городка: речушка, селения, деревни, фермы, неудобные земли, леса.
        # В каждом городке взлётная полоса для планёров. Ровный километр шоссе.
        # На 10 тысячный Понивильский кантон приходится:
        # 127 километров грунтовых дорог.
        # 63 километра щебёночных шоссейных дорог.
        # 14 километров окружных одноколейных железных дорог.
        # Основные направления:
        # - Добыча глины --> городок
        # - Строевой лес --> городок
        # - Лесопилка --> стройплощадка в селении
        # - Селения --> городок
        # - Фермеры --> городок
    # Окружные грузоперевозки -- 25 - 100 километров (62 километра)
        # На 100 тысячный Пайвильский округ приходится:
        # 134 километра окружных одноколейных железных дорог.
        # 67 километров региональной двухколейной железной дороги.
    # Региональные грузоперевозки -- 100-500 километров (300 километров)
        # В пределах региона
    # Межрегиональные грузоперевозки -- 500-3000 километров (1750 километров)
        # Охватывают все самые населённые регионы страны, чуть не доставая до Ванхувера.
    # Международные грузоперевозки -- 4000-8000 километров (6000 километров)
        # От зебр Эверглейдса, до торговли через весь западный океан.

metadict_detail['Доставка воды для хозяйства, трубопровод (нетто) (килограмм)'] = {
        'Приусадебные грузоперевозки воды, трубопроводные (нетто) (килограмм)':1,
        }

metadict_detail['Доставка воды для хозяйства (брутто) (килограмм)'] = {
        # TODO: А как насчёт пегасьего водопровода? Вода с крыши --> резервуар.
            # 48 кв.метров крыши + 3 мм осадков = 144 литра воды
            # На восточном побережье США выпадает 1000 мм/год.
        'Приусадебные грузоперевозки воды (брутто) (килограмм)':1,
        }

metadict_detail['Доставка воды для промышленности (брутто) (килограмм)'] = {
        'Сельские грузоперевозки воды (брутто) (килограмм)':1,
        }

metadict_detail['Вывоз мусора, твёрдого (брутто) (килограмм)'] = {
        # В основном очистки овощей, мезга фруктов.
        'Приусадебные грузоперевозки мусора (брутто) (килограмм)':0.7,
        'Сельские грузоперевозки мусора (брутто) (килограмм)':0.1,
        'Канализация мусора (нетто) (килограмм)':0.2,
        }

metadict_detail['Вывоз мусора, жидкого (брутто) (килограмм)'] = {
        # В основном смешанные с торфом нечистоты и сусло.
        'Приусадебные грузоперевозки воды (брутто) (килограмм)':0.7,
        'Сельские грузоперевозки воды (брутто) (килограмм)':0.1,
        'Канализация мусора (нетто) (килограмм)':0.2,
        }

metadict_detail['Слив жидких отходов, трубопровод (нетто) (килограмм)'] = {
        'Канализация жидких отходов, трубопровод (нетто) (килограмм)':1,
        }

metadict_detail['Вывоз мусора, строительного (брутто) (килограмм)'] = {
        # Почти исключительно "вывоз грунта".
        'Приусадебные грузоперевозки мусора (брутто) (килограмм)':0.5,
        'Сельские грузоперевозки мусора (брутто) (килограмм)':0.5,
        }

metadict_detail['Доставка грузов от ближайшего леса (брутто) (килограмм)'] = {
        # В среднем 10 тонно-километров
        'Сельские грузоперевозки (брутто) (килограмм)':0.3,
        'Кантонные грузоперевозки (брутто) (килограмм)':0.7,
        }

metadict_detail['Доставка зерновых (брутто) (килограмм)'] = {
        # От фермы к селению, дальше в город, часть в торговлю по регионам, прошлогоднее на экспорт.
            # 1) ферма --> селение
            # 2) селение --> городок
            # 3) городок --> окружной центр, город (элеваторы)
            # 4) окружной центр --> региональный центр, мегаполис
            # 5) окружной центр --> соседние регионы, мегаполисы
            # 6) региональный центр --> международная торговля
        # Сколько съедают:
            # - 12% населения живут в 16 мегаполисах с 50+ тысячами жителей.
            # - 13% населения живут в 100 городах (15-50 тыс. жителей)
            # - 12% населения живут в 1200 городках (3-15 тыс. жителей)
            # - 23% населения, 8000 селений (300-3000 жителей)
            # - 20% населения, 36 000 деревень (50-300 жителей)
            # - 20% населения, 180 000 ферм и хуторов (5-50 жителей)
        'Сельские грузоперевозки (брутто) (килограмм)':1,
        'Кантонные грузоперевозки (брутто) (килограмм)':0.8,
        'Окружные грузоперевозки (брутто) (килограмм)':0.6,
        'Региональные грузоперевозки (брутто) (килограмм)':0.5,
        'Межрегиональные грузоперевозки (брутто) (килограмм)':0.4,
        'Международные грузоперевозки (экспорт) (брутто) (килограмм)':0.3,
        '-Экспорт продовольствия (требуется/килограмм)':0.3,
        }

metadict_detail['Доставка масличного сырья (брутто) (килограмм)'] = {
        # Аналогично зерну. Масло делают по мере надобности. Арахисом торгуют.
        'Сельские грузоперевозки (брутто) (килограмм)':1,
        'Кантонные грузоперевозки (брутто) (килограмм)':0.8,
        'Окружные грузоперевозки (брутто) (килограмм)':0.6,
        'Региональные грузоперевозки (брутто) (килограмм)':0.5,
        'Межрегиональные грузоперевозки (брутто) (килограмм)':0.4,
        'Международные грузоперевозки (экспорт) (брутто) (килограмм)':0.3,
        '-Экспорт продовольствия (требуется/килограмм)':0.3,
        }

metadict_detail['Доставка зернобобовых (брутто) (килограмм)'] = {
        'Сельские грузоперевозки (брутто) (килограмм)':1,
        'Кантонные грузоперевозки (брутто) (килограмм)':0.8,
        'Окружные грузоперевозки (брутто) (килограмм)':0.6,
        'Региональные грузоперевозки (брутто) (килограмм)':0.5,
        'Межрегиональные грузоперевозки (брутто) (килограмм)':0.4,
        'Международные грузоперевозки (экспорт) (брутто) (килограмм)':0.3,
        '-Экспорт продовольствия (требуется/килограмм)':0.3,
        }

metadict_detail['Доставка орехов (брутто) (килограмм)'] = {
        # В основном дикорастущие: грецкие, миндаль, фисташки, кешью.
        # Ценное кондитерское сырьё.
            # 1) лес --> селение
            # 1.1) лес --> городок
            # 2) селение --> городок
            # 3) городок --> окружной центр, город (элеваторы)
            # 4) окружной центр --> региональный центр, мегаполис
            # 5) окружной центр --> соседние регионы, мегаполисы
            # 6) региональный центр --> международная торговля
        'Приусадебные грузоперевозки (брутто) (килограмм)':1.0,
        'Сельские грузоперевозки (брутто) (килограмм)':0.8,
        'Кантонные грузоперевозки (брутто) (килограмм)':0.8,
        'Окружные грузоперевозки (брутто) (килограмм)':0.6,
        'Региональные грузоперевозки (брутто) (килограмм)':0.5,
        'Межрегиональные грузоперевозки (брутто) (килограмм)':0.4,
        'Международные грузоперевозки (экспорт) (брутто) (килограмм)':0.3,
        '-Экспорт продовольствия (требуется/килограмм)':0.3,
        }

metadict_detail['Доставка сельскохозяйственного сырья (брутто) (килограмм)'] = {
        # Снопы зерновых, початки кукурузы, оливки в корзинах.
        # Объёмные, неудобные грузы, на обмолот и первичную обработку.
        'Сельские грузоперевозки (брутто) (килограмм)':1.0,
        'Кантонные грузоперевозки (брутто) (килограмм)':0.2,
        }

metadict_detail['Доставка сельскохозяйственного сырья (Зебрика) (брутто) (килограмм)'] = {
        # В основном сахарный тростник. От плантаций на производство сахара-сырца.
        'Сельские грузоперевозки (Зебрика) (брутто) (килограмм)':1.0,
        'Кантонные грузоперевозки (Зебрика) (брутто) (килограмм)':0.2,
        }

metadict_detail['Доставка овощей (брутто) (килограмм)'] = {
        # В основном это картофель, свёкла, лук, морковь и прочие корнеплоды.
            # 1) огород --> погреб
            # 2) ферма --> селение
            # 2.1) ферма --> городок
            # 3) городок --> окружной центр, город (склады)
            # 4) окружной центр --> региональный центр, мегаполис
            # 5) окружной центр --> соседние регионы, мегаполисы
        # 70% населения, жители ферм, деревень, селений и городков -- огородничают сами.
        'Приусадебные грузоперевозки (брутто) (килограмм)':1.0,
        'Сельские грузоперевозки (брутто) (килограмм)':0.7,
        'Кантонные грузоперевозки (брутто) (килограмм)':0.5,
        'Окружные грузоперевозки (брутто) (килограмм)':0.4,
        'Региональные грузоперевозки (брутто) (килограмм)':0.3,
        'Межрегиональные грузоперевозки (брутто) (килограмм)':0.2,
        'Международные грузоперевозки (экспорт) (брутто) (килограмм)':0.1,
        '-Экспорт продовольствия (требуется/килограмм)':0.1,
        }

metadict_detail['Доставка фруктов (брутто) (килограмм)'] = {
        # Изрядную часть фруктов сушат и перерабатывают на месте.
        'Приусадебные грузоперевозки (брутто) (килограмм)':1.0,
        'Сельские грузоперевозки (брутто) (килограмм)':0.5,
        'Кантонные грузоперевозки (брутто) (килограмм)':0.4,
        'Окружные грузоперевозки (брутто) (килограмм)':0.3,
        'Региональные грузоперевозки (брутто) (килограмм)':0.2,
        'Межрегиональные грузоперевозки (брутто) (килограмм)':0.1,
        'Международные грузоперевозки (экспорт) (брутто) (килограмм)':0.1,
        '-Экспорт продовольствия (требуется/килограмм)':0.1,
        }

metadict_detail['Доставка продовольствия (брутто) (килограмм)'] = {
        # Междугородняя и международная торговля полуфабрикатами.
        # Зерно, крупы, масло, сухофрукты и сушёные овощи, вино, консервы, соль и пряности.
        'Сельские грузоперевозки (брутто) (килограмм)':0.6,
        'Кантонные грузоперевозки (брутто) (килограмм)':0.6,
        'Окружные грузоперевозки (брутто) (килограмм)':0.5,
        'Региональные грузоперевозки (брутто) (килограмм)':0.4,
        'Межрегиональные грузоперевозки (брутто) (килограмм)':0.3,
        'Международные грузоперевозки (экспорт) (брутто) (килограмм)':0.2,
        '-Экспорт продовольствия (требуется/килограмм)':0.2,
        }

metadict_detail['Доставка продовольствия, импорт (Зебрика) (брутто) (килограмм)'] = {
        # Обратная пирамида, заграничные товары распределяются по регионам, городам, городкам.
        'Международные грузоперевозки (Зебрика) (брутто) (килограмм)':1.0,
        'Межрегиональные грузоперевозки (брутто) (килограмм)':0.8,
        'Региональные грузоперевозки (брутто) (килограмм)':0.6,
        'Окружные грузоперевозки (брутто) (килограмм)':0.4,
        'Кантонные грузоперевозки (брутто) (килограмм)':0.2,
        'Сельские грузоперевозки (брутто) (килограмм)':0.1,
        '-Импорт продовольствия (требуется/килограмм)':1,
        }

metadict_detail['Доставка фруктов, импорт (Зебрика) (брутто) (килограмм)'] = {
        # Из Эверглейдса в Эквестрию. Перевозки на планёрах и океанских судах.
        'Международные грузоперевозки (Зебрика) (брутто) (килограмм)':0.5,
        'Международные грузоперевозки, воздушные (Зебрика) (брутто) (килограмм)':0.5,
        'Межрегиональные грузоперевозки (брутто) (килограмм)':0.8,
        'Региональные грузоперевозки (брутто) (килограмм)':0.6,
        'Окружные грузоперевозки (брутто) (килограмм)':0.4,
        'Кантонные грузоперевозки (брутто) (килограмм)':0.2,
        '-Импорт продовольствия (требуется/килограмм)':1,
        }

metadict_detail['Доставка строительного сырья (брутто) (килограмм)'] = {
        # Щебень, песок, глина, бутовый камень.
        'Сельские грузоперевозки (брутто) (килограмм)':0.6,
        'Кантонные грузоперевозки (брутто) (килограмм)':0.4,
        }

metadict_detail['Доставка дров (брутто) (килограмм)'] = {
        # Средний пробег топливных грузов в России, 1913 год -- 328 км (3/4 дрова)
        # Селяне сами выращивают свои дровяные леса. Собирают валежник и сухостой.
        # Города и мегаполисы снабжают по морю и железным дорогам.
        'Сельские грузоперевозки (брутто) (килограмм)':0.3,
        'Кантонные грузоперевозки (брутто) (килограмм)':0.5,
        'Окружные грузоперевозки (брутто) (килограмм)':0.3,
        'Региональные грузоперевозки (брутто) (килограмм)':0.2,
        'Межрегиональные грузоперевозки (брутто) (килограмм)':0.1,
        }

metadict_detail['Доставка дров (Зебрика) (брутто) (килограмм)'] = {
        # Колониальное производство сахара-сырца.
        'Сельские грузоперевозки (брутто) (килограмм)':0.4,
        'Кантонные грузоперевозки (брутто) (килограмм)':0.6,
        }

metadict_detail['Доставка угля (брутто) (килограмм)'] = {
        # Древесный уголь готовят в городах, из сплавленного по рекам кругляка.
        # Сельское производство в ямах слишком расточительно.
        'Кантонные грузоперевозки (брутто) (килограмм)':1.0,
        'Окружные грузоперевозки (брутто) (килограмм)':0.7,
        'Региональные грузоперевозки (брутто) (килограмм)':0.6,
        'Межрегиональные грузоперевозки (брутто) (килограмм)':0.5,
        }

metadict_detail['Доставка стройматериалов (брутто) (килограмм)'] = {
        # Пиломатериалы, кирпич, саман, опилкобетон, стекло, черепица
        # От регионального производства к стройплощадкам.
        'Кантонные грузоперевозки (брутто) (килограмм)':1.0,
        'Окружные грузоперевозки (брутто) (килограмм)':0.6,
        'Региональные грузоперевозки (брутто) (килограмм)':0.4,
        'Межрегиональные грузоперевозки (брутто) (килограмм)':0.2,
        }

metadict_detail['Доставка промышленного сырья (брутто) (килограмм)'] = {
        # Лён-сырец, хлопок-сырец, пенька, смоляк.
        # После предварительной обработки, на фабрики в городах.
        'Сельские грузоперевозки (брутто) (килограмм)':1.0,
        'Кантонные грузоперевозки (брутто) (килограмм)':0.8,
        'Окружные грузоперевозки (брутто) (килограмм)':0.6,
        'Региональные грузоперевозки (брутто) (килограмм)':0.4,
        'Межрегиональные грузоперевозки (брутто) (килограмм)':0.2,
        }

metadict_detail['Доставка промышленных товаров (брутто) (килограмм)'] = {
        # Цемент, металлы, пряжа, вата, ткани, мыло, дёготь, олифа, краски, взрывчатка, 
        'Кантонные грузоперевозки (брутто) (килограмм)':1.0,
        'Окружные грузоперевозки (брутто) (килограмм)':0.8,
        'Региональные грузоперевозки (брутто) (килограмм)':0.6,
        'Межрегиональные грузоперевозки (брутто) (килограмм)':0.4,
        'Международные грузоперевозки (экспорт) (брутто) (килограмм)':0.2,
        }

metadict_detail['Доставка почты (брутто) (килограмм)'] = {
        # Газеты, письма, посылки.
        'Кантонные грузоперевозки (брутто) (килограмм)':1.0,
        'Окружные грузоперевозки (брутто) (килограмм)':1.0,
        'Региональные грузоперевозки (брутто) (килограмм)':0.8,
        'Межрегиональные грузоперевозки (брутто) (килограмм)':0.6,
        'Международные грузоперевозки (почта) (брутто) (килограмм)':0.2,
        }

metadict_detail['Доставка скоропортящихся продуктов (брутто) (килограмм)'] = {
        # В основном это хлеб и квас, от городских производств в сёла.
        # - Село, деревня --> поле
        # - Городок --> село --> деревня --> поле
        # - Город (пекарня) --> городок --> село
        # В среднем 17 тонно-километров и 3 нормо-часа/тонна.
        'Сельские грузоперевозки (брутто) (килограмм)':0.8,
        'Кантонные грузоперевозки (брутто) (килограмм)':0.3,
        'Окружные грузоперевозки (брутто) (килограмм)':0.1,
        }

metadict_detail['Доставка горячей пищи (брутто) (килограмм)'] = {
        # Воздушные грузоперевозки дешёвые:
            # На годовой рацион (600 кг нетто, 1200 брутто):
            # - 1 бит в пределах села (1 час)
            # - 2 бит в пределах кантона (30 минут)
            # - 6 бит в пределах округа (2-4 часа)
            # - 26 бит в пределах региона (8-10 часов)
            # amber -sm изысканный рацион
        'Сельские грузоперевозки горячей пищи (брутто) (килограмм)':1.0,
        'Кантонные грузоперевозки, воздушные (брутто) (килограмм)':0.5,
        'Окружные грузоперевозки, воздушные (брутто) (килограмм)':0.2,
        'Региональные грузоперевозки, воздушные (брутто) (килограмм)':0.1,
        }

#----
# Грузоперевозки (коррекция величин):

metadict_detail['Канализация мусора (нетто) (килограмм)'] = {
        'Канализация мусора (тонн)':1 / 1000,
        '|===Грузов перевезено, трубопровод (тонн)':1 / 1000,
        }

metadict_detail['Канализация жидких отходов, трубопровод (нетто) (килограмм)'] = {
        'Канализация жидких отходов, трубопровод (тонн)':1 / 1000,
        '|===Грузов перевезено, трубопровод (тонн)':1 / 1000,
        }

metadict_detail['Кантонные грузоперевозки (Зебрика) (брутто) (килограмм)'] = {
        'Кантонные грузоперевозки (Зебрика) (тонн)':1 / 1000,
        '|===Грузов перевезено (тонн)':1 / 1000,
        }

metadict_detail['Кантонные грузоперевозки (брутто) (килограмм)'] = {
        'Кантонные грузоперевозки (тонн)':1 / 1000,
        '|===Грузов перевезено (тонн)':1 / 1000,
        }

metadict_detail['Кантонные грузоперевозки, воздушные (брутто) (килограмм)'] = {
        'Кантонные грузоперевозки, воздушные (тонн)':1 / 1000,
        '|===Грузов перевезено (тонн)':1 / 1000,
        }

metadict_detail['Международные грузоперевозки (Зебрика) (брутто) (килограмм)'] = {
        'Международные грузоперевозки (Зебрика) (тонн)':1 / 1000,
        '|===Грузов перевезено (тонн)':1 / 1000,
        }

metadict_detail['Международные грузоперевозки, воздушные (Зебрика) (брутто) (килограмм)'] = {
        'Международные грузоперевозки, воздушные (Зебрика) (тонн)':1 / 1000,
        '|===Грузов перевезено (тонн)':1 / 1000,
        }

metadict_detail['Международные грузоперевозки (экспорт) (брутто) (килограмм)'] = {
        'Международные грузоперевозки (экспорт) (тонн)':1 / 1000,
        '|===Грузов перевезено (тонн)':1 / 1000,
        }

metadict_detail['Международные грузоперевозки (почта) (брутто) (килограмм)'] = {
        'Международные грузоперевозки (почта) (тонн)':1 / 1000,
        '|===Грузов перевезено (тонн)':1 / 1000,
        }

metadict_detail['Межрегиональные грузоперевозки (брутто) (килограмм)'] = {
        'Межрегиональные грузоперевозки (тонн)':1 / 1000,
        '|===Грузов перевезено (тонн)':1 / 1000,
        }

metadict_detail['Окружные грузоперевозки (брутто) (килограмм)'] = {
        'Окружные грузоперевозки (тонн)':1 / 1000,
        '|===Грузов перевезено (тонн)':1 / 1000,
        }

metadict_detail['Окружные грузоперевозки, воздушные (брутто) (килограмм)'] = {
        'Окружные грузоперевозки, воздушные (тонн)':1 / 1000,
        '|===Грузов перевезено (тонн)':1 / 1000,
        }

metadict_detail['Приусадебные грузоперевозки (брутто) (килограмм)'] = {
        # Дистанции до 300 метров не попадают в статистику грузоперевозок.
        # Это чисто домашние дела, которые, впрочем, учитываются в затратах времени.
        'Приусадебные грузоперевозки (тонн)':1 / 1000,
        #'|===Грузов перевезено (тонн)':1 / 1000,
        }

metadict_detail['Приусадебные грузоперевозки воды (брутто) (килограмм)'] = {
        'Приусадебные грузоперевозки воды (тонн)':1 / 1000,
        #'|===Грузов перевезено (тонн)':1 / 1000,
        }

metadict_detail['Приусадебные грузоперевозки воды, трубопроводные (нетто) (килограмм)'] = {
        'Приусадебные грузоперевозки воды, трубопроводные (тонн)':1 / 1000,
        #'|===Грузов перевезено, трубопровод (тонн)':1 / 1000,
        }

metadict_detail['Приусадебные грузоперевозки мусора (брутто) (килограмм)'] = {
        'Приусадебные грузоперевозки мусора (тонн)':1 / 1000,
        #'|===Грузов перевезено (тонн)':1 / 1000,
        }

metadict_detail['Региональные грузоперевозки (брутто) (килограмм)'] = {
        'Региональные грузоперевозки (тонн)':1 / 1000,
        '|===Грузов перевезено (тонн)':1 / 1000,
        }

metadict_detail['Региональные грузоперевозки, воздушные (брутто) (килограмм)'] = {
        'Региональные грузоперевозки, воздушные (тонн)':1 / 1000,
        '|===Грузов перевезено (тонн)':1 / 1000,
        }

metadict_detail['Сельские грузоперевозки (Зебрика) (брутто) (килограмм)'] = {
        'Сельские грузоперевозки (Зебрика) (тонн)':1 / 1000,
        '|===Грузов перевезено (тонн)':1 / 1000,
        }

metadict_detail['Сельские грузоперевозки (брутто) (килограмм)'] = {
        'Сельские грузоперевозки (тонн)':1 / 1000,
        '|===Грузов перевезено (тонн)':1 / 1000,
        }

metadict_detail['Сельские грузоперевозки воды (брутто) (килограмм)'] = {
        'Сельские грузоперевозки воды (тонн)':1 / 1000,
        '|===Грузов перевезено (тонн)':1 / 1000,
        }

metadict_detail['Сельские грузоперевозки мусора (брутто) (килограмм)'] = {
        'Сельские грузоперевозки мусора (тонн)':1 / 1000,
        '|===Грузов перевезено (тонн)':1 / 1000,
        }

metadict_detail['Сельские грузоперевозки горячей пищи (брутто) (килограмм)'] = {
        'Сельские грузоперевозки горячей пищи (тонн)':1 / 1000,
        '|===Грузов перевезено (тонн)':1 / 1000,
        }

#----
# Виды транспорта:

metadict_detail['Канализация жидких отходов, трубопровод (тонн)'] = {
        # Это сливаемая в канализацию вода.
        'Маршрут городской-трубопроводный, жилище --> отстойники (тонн)':1,
        }

metadict_detail['Канализация мусора (тонн)'] = {
        # Это тот случай, когда твёрдые пищевые отходы смешиваются с жидкими.
        'Маршрут городской-трубопроводный, жилище --> отстойники (тонн)':1,
        }

metadict_detail['Приусадебные грузоперевозки воды, трубопроводные (тонн)'] = {
        # В кирпичных домах краны, на окраинах колонки во дворах.
        'Маршрут городской-трубопроводный, водозабор --> жилище (тонн)':1,
        }

metadict_detail['Приусадебные грузоперевозки (тонн)'] = {
        # Приусадебные грузоперевозки -- 100 - 300 метров (200 метров, 12 гектаров)
        # Между домом и огородом, с корзинами на боках.
        'Маршрут приусадебный-вьючный, огород --> амбар (тонн)':1,
        }

metadict_detail['Приусадебные грузоперевозки воды (тонн)'] = {
        # Воду возят в бочке на телеге.
        # На семью из 5 селян требуется 270 литров/сутки
        'Маршрут приусадебный-гужевой, колодец --> жилище (тонн)':0.6,
        'Маршрут приусадебный-вьючный, колодец --> жилище (тонн)':0.4,
        }

metadict_detail['Приусадебные грузоперевозки мусора (тонн)'] = {
        'Маршрут приусадебный-гужевой, жилище --> свалка (тонн)':1,
        }

metadict_detail['Сельские грузоперевозки (тонн)'] = {
        # Сельские грузоперевозки -- 300-2000 метров (1100 метров, 380 гектаров)
        # Абсолютное преобладание пегасов с телегами.
        'Маршрут сельский-гужевой, пашня --> амбар (тонн)':0.9,
        'Маршрут сельский-вьючный, сад --> амбар (тонн)':0.1,
        '|===Грузонапряжённость сельских дорог (тонн)':1,
        }

metadict_detail['Сельские грузоперевозки воды (тонн)'] = {
        'Маршрут сельский-гужевой, водозабор --> производство (тонн)':1,
        '|===Грузонапряжённость сельских дорог (тонн)':1,
        }

metadict_detail['Сельские грузоперевозки мусора (тонн)'] = {
        'Маршрут сельский-гужевой, стройплощадка --> отвал (тонн)':1,
        '|===Грузонапряжённость сельских дорог (тонн)':1,
        }

metadict_detail['Сельские грузоперевозки горячей пищи (тонн)'] = {
        # Возят во вьюках и на тележках в среднем по 50 килограмм.
        'Маршрут сельский-вьючный, ресторан --> потребители (тонн)':1,
        '|===Грузонапряжённость сельских дорог (тонн)':1,
        }

metadict_detail['Сельские грузоперевозки (Зебрика) (тонн)'] = {
        # У зебр нет пегасов, телеги таскать сложнее.
        'Маршрут сельский-гужевой, плантация --> производство (Зебрика) (тонн)':0.8,
        'Маршрут сельский-вьючный, плантация --> производство (Зебрика) (тонн)':0.2,
        '|===Грузонапряжённость сельских дорог (тонн)':0.8,
        }

metadict_detail['Кантонные грузоперевозки (тонн)'] = {
        # Кантонные грузоперевозки -- 2-20 километров (11 километров, 400 кв. километров)
        # Сеть каналов и грунтовых дорог, множество поселений на берегах судоходных рек.
            # ----Кантоны...................................... | 1,262
            # Северо-восточный речной кантон................... | 58
            # Северо-западный речной кантон.................... | 30
            # Средне-восточный речной кантон................... | 134
            # Среднеземный речной кантон....................... | 123
            # Юго-восточный речной кантон...................... | 55
            # Северо-восточный прибрежный кантон............... | 92
            # Северо-западный прибрежный кантон................ | 70
            # Средне-восточный прибрежный кантон............... | 80
            # Юго-восточный прибрежный кантон.................. | 122
        # В итоге 61% сёл и городков имеют доступ к судоходным рекам, или стоят вдоль берега морей.
        # В 10-тысячном кантоне 63 километра щебёночных шоссейных дорог (12.6 км/селение)
        'Маршрут кантонный-гужевой, селение --> городок (тонн)':0.6,
        'Маршрут кантонный-речной, селение --> городок (тонн)':0.4,
        '|===Грузонапряжённость шоссейных дорог (тонн)':0.6,
        '|===Грузонапряжённость речных путей (тонн)':0.4,
        }

metadict_detail['Кантонные грузоперевозки, воздушные (тонн)'] = {
        # Большую часть горячей пищи развозят по организациям (строители, лесники)
        'Маршрут кантонный-воздушный, склад --> потребители (тонн)':1,
        '|===Грузонапряжённость воздушных путей (тонн)':1,
        }

metadict_detail['Кантонные грузоперевозки (Зебрика) (тонн)'] = {
        # Сахарный тростник выращивают вблизи рек и каналов. Возят на баржах.
        'Маршрут кантонный-гужевой, плантация --> производство (Зебрика) (тонн)':0.2,
        'Маршрут кантонный-речной, плантация --> производство (Зебрика) (тонн)':0.8,
        '|===Грузонапряжённость шоссейных дорог (тонн)':0.4,
        '|===Грузонапряжённость речных путей (тонн)':0.6,
        }

metadict_detail['Окружные грузоперевозки (тонн)'] = {
        # Окружные грузоперевозки -- 25 - 100 километров
            # Железные дороги связывают все центры округов и многие городки.
            # Тем не менее телеги на шоссейных дорогах ходят и на такие расстояния.
        'Маршрут окружной-гужевой, городок <-> город (тонн)':0.2,
        'Маршрут окружной-железнодорожный, городок <-> город (тонн)':0.5,
        'Маршрут окружной-речной, городок <-> город (тонн)':0.3,
        '|===Грузонапряжённость шоссейных дорог (тонн)':0.2,
        '|===Грузонапряжённость железных дорог (тонн)':0.5,
        '|===Грузонапряжённость речных путей (тонн)':0.3,
        }

metadict_detail['Окружные грузоперевозки, воздушные (тонн)'] = {
        'Маршрут окружной-воздушный, склад --> потребители (тонн)':1,
        '|===Грузонапряжённость воздушных путей (тонн)':1,
        }

metadict_detail['Региональные грузоперевозки (тонн)'] = {
        # Региональные грузоперевозки -- 100-500 километров
        # Все окружные города связаны с региональным мегаполисом железными дорогами.
        # Российская Империя 1902-1910 годы -- 30% речной, 70% железнодорожный.
        # Российская Империя 1913 год -- 17% речной, 83% железнодорожный
        # https://istmat.org/node/65
        'Маршрут региональный-железнодорожный, Сталлионград --> Мэйнхеттен (тонн)':0.2,
        'Маршрут региональный-железнодорожный, Троттингем --> Филлидельфия (тонн)':0.1,
        'Маршрут региональный-железнодорожный, Хуффингтон --> Кантерлот (тонн)':0.1,
        'Маршрут региональный-железнодорожный, город <-> мегаполис (тонн)':0.4,
        'Маршрут региональный-речной, город <-> мегаполис (тонн)':0.2,
        '|===Грузонапряжённость железных дорог (тонн)':0.8,
        '|===Грузонапряжённость речных путей (тонн)':0.1,
        }

metadict_detail['Региональные грузоперевозки, воздушные (тонн)'] = {
        'Маршрут региональный-воздушный, склад --> потребители (тонн)':1,
        '|===Грузонапряжённость воздушных путей (тонн)':1,
        }

metadict_detail['Межрегиональные грузоперевозки (тонн)'] = {
        # TODO: Межрегиональные грузоперевозки. Маршруты допилить.
        # Межрегиональные грузоперевозки -- 500-3000 километров
        # Межрегиональные грузоперевозки (тонн)............... | 17,602,275
            # Балтимэрский регион (тонн)...................... | 3,287,104 (19%)
            # Кантерлотский регион (тонн)..................... | 2,627,421 (15%)
            # Мэйнхеттенский регион (тонн).................... | 2,592,286 (15%)
            # Филлидельфийский регион (тонн).................. | 4,056,833 (23%)
            # Лас-Пегаский регион (тонн)...................... | 1,992,908 (11%)
            # Ванхуверский регион (тонн)...................... | 1,713,461 (10%)
            # Эпплузский регион (тонн)........................ | 1,332,262 (8%)
        'Маршрут межрегиональный-железнодорожный, Мэйнхеттен <-> Филлидельфия (тонн)':0.1,
        'Маршрут межрегиональный-железнодорожный, Мэйнхеттен <-> Филлидельфия <-> Кантерлот (тонн)':0.05,
        'Маршрут межрегиональный-железнодорожный, Мэйнхеттен <-> Филлидельфия <-> Балтимэр (тонн)':0.05,
        'Маршрут межрегиональный-железнодорожный, Филлидельфия <-> Балтимэр (тонн)':0.05,
        'Маршрут межрегиональный-железнодорожный, Филлидельфия <-> Кантерлот (тонн)':0.1,
        'Маршрут межрегиональный-железнодорожный, Филлидельфия <-> Кантерлот <-> Ванхувер (тонн)':0.1,
        'Маршрут межрегиональный-железнодорожный, Кантерлот <-> Эпплуза (тонн)':0.1,
        'Маршрут межрегиональный-железнодорожный, Кантерлот <-> Лас-Пегасус (тонн)':0.1,
        'Маршрут межрегиональный-железнодорожный, Кантерлот <-> Лас-Пегасус <-> Ванхувер (тонн)':0.05,
        'Маршрут межрегиональный-морской, Балтимэр <-> Филлидельфия (тонн)':0.1,
        'Маршрут межрегиональный-морской, Балтимэр <-> Мэйнхеттен (тонн)':0.1,
        'Маршрут межрегиональный-речной, Балтимэр <-> Кантерлот (тонн)':0.1,
        '|===Грузонапряжённость железных дорог (тонн)':0.7,
        '|===Грузонапряжённость морских путей (тонн)':0.2,
        '|===Грузонапряжённость речных путей (тонн)':0.1,
        }

metadict_detail['Международные грузоперевозки (экспорт) (тонн)'] = {
        # Международные грузоперевозки -- 4000-8000 километров
        'Маршрут международный-речной, Филлидельфия <-> Фонтейн (тонн)':0.1,
        'Маршрут международный-морской, Мэйнхеттен <-> Грифус (тонн)':0.1,
        'Маршрут международный-морской, Мэйнхеттен <-> Зенкори (тонн)':0.1,
        'Маршрут международный-морской, Мэйнхеттен <-> Зевера (тонн)':0.1,
        'Маршрут международный-морской, Балтимэр <-> Зевера (тонн)':0.1,
        'Маршрут международный-морской, Балтимэр <-> Капо-Тун (тонн)':0.1,
        'Маршрут международный-морской, Балтимэр <-> Грифус (тонн)':0.1,
        'Маршрут международный-морской, Ванхувер <-> Якияк (тонн)':0.1,
        'Маршрут международный-морской, Ванхувер <-> мыс Вестхуф (тонн)':0.1,
        'Маршрут международный-морской, Ванхувер <-> Маэт-Кэр (тонн)':0.1,
        '|===Грузонапряжённость морских путей (тонн)':1,
        }

metadict_detail['Международные грузоперевозки (Зебрика) (тонн)'] = {
        # Торговля сахаром.
        'Маршрут международный-морской, Зевера --> Балтимэр (тонн)':0.4,
        'Маршрут международный-морской, Зевера --> Мэйнхеттен (тонн)':0.2,
        'Маршрут международный-морской, Зенкори --> Балтимэр (тонн)':0.2,
        'Маршрут международный-морской, Зенкори --> Мэйнхеттен (тонн)':0.2,
        '|===Грузонапряжённость морских путей (тонн)':1,
        }

metadict_detail['Международные грузоперевозки (почта) (тонн)'] = {
        # Международные грузоперевозки -- 4000-8000 километров
        'Маршрут международный-воздушный, Филлидельфия <-> Фонтейн (тонн)':0.1,
        'Маршрут международный-воздушный, Балтимэр <-> Грифус (тонн)':0.2,
        'Маршрут международный-воздушный, Балтимэр <-> Зенкори (тонн)':0.1,
        'Маршрут международный-воздушный, Балтимэр <-> Зевера (тонн)':0.1,
        'Маршрут международный-воздушный, Балтимэр <-> Капо-Тун (тонн)':0.1,
        'Маршрут международный-воздушный, Ванхувер <-> Якияк (тонн)':0.1,
        'Маршрут международный-воздушный, Ванхувер <-> мыс Вестхуф (тонн)':0.1,
        'Маршрут международный-воздушный, Ванхувер <-> Маэт-Кэр (тонн)':0.2,
        '|===Грузонапряжённость воздушных путей (тонн)':1,
        }

metadict_detail['Международные грузоперевозки, воздушные (Зебрика) (тонн)'] = {
        # Торговля фруктами.
        'Маршрут международный-воздушный, Зевера --> Балтимэр (тонн)':0.5,
        'Маршрут международный-воздушный, Зенкори --> Балтимэр (тонн)':0.5,
        '|===Грузонапряжённость воздушных путей (тонн)':1,
        }

#----
# Транспорт (дистанции):
    # Экономика России, цифры и факты. Часть 3 Транспорт.
        # https://utmagazine.ru/posts/10280-ekonomika-rossii-cifry-i-fakty-chast-3-transport
        # Грузооброт в России 2015 года (146.2 млн человек) -- 5080 млрд. ткм (34 746 ткм/человека)
        # Российские железные дороги (894 тысячи работников) -- 3180 млрд. ткм (3 557 046 ткм/работника)
    # Среднее расстояние перевозки по видам транспорта:
        # Воздушный -- 4000 километров;
        # Железнодорожный -- 2134 километров;
        # Водный (морской и речной) -- 776 километров;
        # Автомобильный -- 45 километров.
    # Среднее расстояние перевозки по видам грузов:
        # Каменный уголь – 2 327 км.
        # Химические и минеральные удобрения – 1 620 км.
        # Нефть и нефтепродукты – 1 574 км.
        # Зерно и продукты помола – 1 567 км.
        # Лес и пиломатериалы – 1 541 км.
        # Черные металлы – 1 446 км.
        # Руды металлов – 1041 км.
        # Лом черных металлов – 877 км.
        # Цемент – 764 км.
        # Минеральные стройматериалы – 754 км.

metadict_detail['Маршрут городской-трубопроводный, водозабор --> жилище (тонн)'] = {
        # Город -- 15 000 населения, 62 гектара усадеб (1000x1000 метров)
        # Около 1000 метров магистрального водопровода + 1000 метров уличного.
        'Маршрут городской-трубопроводный, водозабор --> жилище (тонно-километров)':2,
        }

metadict_detail['Маршрут городской-трубопроводный, жилище --> отстойники (тонн)'] = {
        'Маршрут городской-трубопроводный, жилище --> отстойники (тонно-километров)':2,
        }

metadict_detail['Маршрут приусадебный-гужевой, колодец --> жилище (тонн)'] = {
        # Селение -- 625 населения, 15 гектаров усадеб (400x400 метров)
            # В среднем 200 метров от колодца до бочки снаружи дома (5 шахтных колодцев на селение)
            # В деревнях и на фермах должно быть меньше. Там простые абессинские колодцы.
        # Туда пустым и обратно с грузом, поэтому x2
        'Маршрут приусадебный-гужевой, колодец --> жилище (тонно-километров)':0.2 * 2,
        '_-Работы погрузочно-разгрузочные с телеги вёдрами (тонн)':1 * 2 * 0.25,
        '_-Работы погрузочно-разгрузочные с телеги насосом (тонн)':1 * 2 * 0.75,
        }

metadict_detail['Маршрут приусадебный-вьючный, колодец --> жилище (тонн)'] = {
        # Доставка воды силами земных. Насос при колодце, разгрузка вёдрами в бак у дома.
        # В среднем 100 метров от колодца до дома. Иначе удобнее с большой телегой.
        # Далее 100 метров на строительстве тачки не использовали.
        # https://ru.wikisource.org/wiki/ЭСБЕ/Грабарская_работа
        'Маршрут приусадебный-вьючный, колодец --> жилище (тонно-километров)':0.1 * 2,
        '_-Работы погрузочно-разгрузочные с тележки вёдрами (тонн)':1 * 2 * 0.75,
        '_-Работы погрузочно-разгрузочные с тележки насосом (тонн)':1 * 2 * 0.25,
        }

metadict_detail['Маршрут приусадебный-вьючный, огород --> амбар (тонн)'] = {
        # Огород занимает не больше гектара, 50x200 метров за усадьбой.
        # В среднем 100 метров от грядок до дома.
        'Маршрут приусадебный-вьючный, огород --> амбар (тонно-километров)':0.1 * 2,
        '_-Работы погрузочно-разгрузочные с тележки (тонн)':1 * 2,
        }

metadict_detail['Маршрут приусадебный-гужевой, жилище --> свалка (тонн)'] = {
        # Вывоз грунта, пищевых отходов, опилок. Это путь к компостной яме за огородами.
        # В среднем 200 метров от свалки до дома.
        'Маршрут приусадебный-гужевой, жилище --> свалка (тонно-километров)':0.2 * 2,
        '_-Работы погрузочно-разгрузочные с телегой-самосвалом (тонн)':1 * 2,
        }

metadict_detail['Маршрут сельский-вьючный, плантация --> производство (Зебрика) (тонн)'] = {
        # TODO: Зачем мы гоняем вьючных зебр на километры, когда у них и телеги есть?
            # Местность не позволяет, или кто-то просто ненавидит зебр?
        # Усреднённо 1100 метров по прямой, коэффициент неровности дорог 0.87 (13%)
        # https://istmat.org/node/27384
        'Маршрут сельский-вьючный, плантация --> производство (Зебрика) (тонно-километров)':1.1 / 0.87 * 2,
        '_-Работы погрузочно-разгрузочные с тележки (Зебрика) (тонн)':1 * 2,
        }

metadict_detail['Маршрут сельский-вьючный, ресторан --> потребители (тонн)'] = {
        # Городок и предместья. Радиус 600 метров, это 100 гектаров (3-12k населения)
        # - Многоэтажная застройка (до 85%, Москва 1913 год) -- 4.3-7.7k жителей/гектар
        # - Многоэтажная застройка (17-27%, Москва 2024 год) -- 0.9-2.5k жителей/гектар
        # - Пригороды, селения -- 20-30 домов/гектар (100-150 жителей/гектар)
        # - Предместья, деревни -- 5-10 домов/гектар (25-50 жителей/гектар)
        # https://en.wikipedia.org/wiki/Urban_sprawl
        'Маршрут сельский-вьючный, ресторан --> потребители (тонно-километров)':0.6 / 0.87 * 2,
        '_-Работы погрузочно-разгрузочные с тележки (тонн)':1 * 2,
        }

metadict_detail['Маршрут сельский-вьючный, сад --> амбар (тонн)'] = {
        # Сады расположены ближе, чем пашни. Сразу за огородами, 600 метров
        'Маршрут сельский-вьючный, сад --> амбар (тонно-километров)':0.6 / 0.87 * 2,
        '_-Работы погрузочно-разгрузочные с тележки (тонн)':1 * 2,
        }

metadict_detail['Маршрут сельский-гужевой, водозабор --> производство (тонн)'] = {
        # Вода для строительства и сельских производств, ещё не устроивших водопровод.
        'Маршрут сельский-гужевой, водозабор --> производство (тонно-километров)':0.6 / 0.87 * 2,
        '_-Работы погрузочно-разгрузочные с телеги насосом (тонн)':1 * 2,
        }

metadict_detail['Маршрут сельский-гужевой, пашня --> амбар (тонн)'] = {
        'Маршрут сельский-гужевой, пашня --> амбар (тонно-километров)':1.1 / 0.87 * 2,
        '_-Работы погрузочно-разгрузочные с телеги (тонн)':1 * 2,
        }

metadict_detail['Маршрут сельский-гужевой, плантация --> производство (Зебрика) (тонн)'] = {
        'Маршрут сельский-гужевой, плантация --> производство (Зебрика) (тонно-километров)':1.1 / 0.87 * 2,
        '_-Работы погрузочно-разгрузочные с телеги (Зебрика) (тонн)':1 * 2,
        }

metadict_detail['Маршрут сельский-гужевой, стройплощадка --> отвал (тонн)'] = {
        # Вывоз грунта. Со строительства, шахт и карьеров.
        'Маршрут сельский-гужевой, стройплощадка --> отвал (тонно-километров)':1.1 / 0.87 * 2,
        '_-Работы погрузочно-разгрузочные с телегой-самосвалом (тонн)':1 * 2,
        }

metadict_detail['Маршрут кантонный-гужевой, плантация --> производство (Зебрика) (тонн)'] = {
        # По прямой 11 километров. Ровные шоссейные дороги, коэффициент 0.9
        'Маршрут кантонный-гужевой, плантация --> производство (Зебрика) (тонно-километров)':11 / 0.9 * 2,
        '_-Работы погрузочно-разгрузочные с телеги (Зебрика) (тонн)':1 * 2,
        }

metadict_detail['Маршрут кантонный-гужевой, селение --> городок (тонн)'] = {
        # От среднего селения до шоссе 3-4 километра. Далее 3-9 км до городка.
        'Маршрут кантонный-гужевой, селение --> городок (тонно-километров)':11 / 0.9 * 2,
        '_-Работы погрузочно-разгрузочные с телеги (тонн)':1 * 2,
        }

metadict_detail['Маршрут кантонный-речной, плантация --> производство (Зебрика) (тонн)'] = {
        # По прямой 11 километров. Извилистые реки, притоки, каналы. Коэффициент 0.7
        'Маршрут кантонный-речной, плантация --> производство (Зебрика) (тонно-километров)':11 / 0.7 * 2,
        '_-Работы погрузочно-разгрузочные с баржи (тонн)':1 * 2,
        }

metadict_detail['Маршрут кантонный-речной, селение --> городок (тонн)'] = {
        # Из села в город доставляют гораздо больше грузов, чем из города в село.
        # Поэтому обратно едем пустыми.
        'Маршрут кантонный-речной, селение --> городок (тонно-километров)':11 / 0.7 * 2,
        '_-Работы погрузочно-разгрузочные с баржи (тонн)':1 * 2,
        }

metadict_detail['Маршрут кантонный-воздушный, склад --> потребители (тонн)'] = {
        'Маршрут кантонный-воздушный, склад --> потребители (тонно-километров)':11 * 2,
        '_-Работы погрузочно-разгрузочные с планёра лёгкого (тонн)':1 * 2,
        }

metadict_detail['Маршрут окружной-гужевой, городок <-> город (тонн)'] = {
        # По прямой 60 километров. Ровные шоссейные дороги, коэффициент 0.9
        # Туда и обратно едем нагруженными. Пегаски-дальнобойщики.
        'Маршрут окружной-гужевой, городок <-> город (тонно-километров)':60 / 0.9,
        '_-Работы погрузочно-разгрузочные с телеги (тонн)':1 * 2,
        }

metadict_detail['Маршрут окружной-железнодорожный, городок <-> город (тонн)'] = {
        # Ровные главные пути, плюс подъездные железные дороги, коэффициент 0.9
        # Длина маршрутов — 70% от длины путей (считая подъездные пути?)
        # https://ppiaf.org/sites/ppiaf.org/files/documents/toolkits/railways_toolkit_russian/download.html
        'Маршрут окружной-железнодорожный, городок <-> город (тонно-километров)':60 / 0.9,
        '_-Работы погрузочно-разгрузочные с поезда (тонн)':1 * 2,
        }

metadict_detail['Маршрут окружной-речной, городок <-> город (тонн)'] = {
        # Сравнительно-ровные каналы, водохранилища, региональные реки. Коэффициент 0.8
        'Маршрут окружной-речной, городок <-> город (тонно-километров)':60 / 0.8,
        '_-Работы погрузочно-разгрузочные с баржи (тонн)':1 * 2,
        }

metadict_detail['Маршрут окружной-воздушный, склад --> потребители (тонн)'] = {
        # Около часа полёта туда-обратно. Курьер возвращается пустым.
        'Маршрут окружной-воздушный, склад --> потребители (тонно-километров)':60 * 2,
        '_-Работы погрузочно-разгрузочные с планёра лёгкого (тонн)':1 * 2,
        }

metadict_detail['Маршрут региональный-железнодорожный, Сталлионград --> Мэйнхеттен (тонн)'] = {
        # Самая длинная из региональных железных дорог. Дистанция по карте -- 900 километров.
        'Маршрут региональный-железнодорожный, Сталлионград --> Мэйнхеттен (тонно-километров)':900 / 0.9,
        '_-Работы погрузочно-разгрузочные с поезда (тонн)':1 * 2,
        }

metadict_detail['Маршрут региональный-железнодорожный, Троттингем --> Филлидельфия (тонн)'] = {
        'Маршрут региональный-железнодорожный, Троттингем --> Филлидельфия (тонно-километров)':500 / 0.9,
        '_-Работы погрузочно-разгрузочные с поезда (тонн)':1 * 2,
        }

metadict_detail['Маршрут региональный-железнодорожный, Хуффингтон --> Кантерлот (тонн)'] = {
        # Гористая местность, извилистый путь до Кантерского плато.
        'Маршрут региональный-железнодорожный, Хуффингтон --> Кантерлот (тонно-километров)':400 / 0.7,
        '_-Работы погрузочно-разгрузочные с поезда (тонн)':1 * 2,
        }

metadict_detail['Маршрут региональный-железнодорожный, город <-> мегаполис (тонн)'] = {
        # Региональные грузоперевозки -- 100-500 километров (300 километров)
        'Маршрут региональный-железнодорожный, город <-> мегаполис (тонно-километров)':300 / 0.9,
        '_-Работы погрузочно-разгрузочные с поезда (тонн)':1 * 2,
        }

metadict_detail['Маршрут региональный-речной, город <-> мегаполис (тонн)'] = {
        'Маршрут региональный-речной, город <-> мегаполис (тонно-километров)':300 / 0.7,
        '_-Работы погрузочно-разгрузочные с баржи (тонн)':1 * 2,
        }

metadict_detail['Маршрут региональный-воздушный, склад --> потребители (тонн)'] = {
        # Четыре часа туда, четыре часа обратно. Пегасья служба доставки.
        'Маршрут региональный-воздушный, склад --> потребители (тонно-километров)':300 * 2,
        '_-Работы погрузочно-разгрузочные с планёра лёгкого (тонн)':1 * 2,
        }

#----
# Транспорт (континентальные торговые маршруты):

metadict_detail['Маршрут межрегиональный-железнодорожный, Кантерлот <-> Лас-Пегасус <-> Ванхувер (тонн)'] = {
        # От Кантерского плато до западного побережья. Сначала гористый затем ровный путь через степь.
        'Маршрут межрегиональный-железнодорожный, Кантерлот <-> Лас-Пегасус <-> Ванхувер (тонно-километров)':2000 / 0.9,
        '_-Работы погрузочно-разгрузочные с поезда (тонн)':1 * 2,
        }

metadict_detail['Маршрут межрегиональный-железнодорожный, Кантерлот <-> Лас-Пегасус (тонн)'] = {
        # Вполовину ближе, чем до Ванхувера. Местность сложнее, каньоны и плоскогорья.
        'Маршрут межрегиональный-железнодорожный, Кантерлот <-> Лас-Пегасус (тонно-километров)':1000 / 0.8,
        '_-Работы погрузочно-разгрузочные с поезда (тонн)':1 * 2,
        }

metadict_detail['Маршрут межрегиональный-железнодорожный, Кантерлот <-> Эпплуза (тонн)'] = {
        # Дорога пересекает притоки Кантера у Хуффингтонских порогов, дальше ровная степь.
        'Маршрут межрегиональный-железнодорожный, Кантерлот <-> Эпплуза (тонно-километров)':1600 / 0.8,
        '_-Работы погрузочно-разгрузочные с поезда (тонн)':1 * 2,
        }

metadict_detail['Маршрут межрегиональный-железнодорожный, Мэйнхеттен <-> Филлидельфия <-> Балтимэр (тонн)'] = {
        # От Мэйнхеттена до Филлидельфии, дальше Балтимэр, местность ровная и самая населённая в стране.
        'Маршрут межрегиональный-железнодорожный, Мэйнхеттен <-> Филлидельфия <-> Балтимэр (тонно-километров)':(700 + 500) / 0.9,
        '_-Работы погрузочно-разгрузочные с поезда (тонн)':1 * 2,
        }

metadict_detail['Маршрут межрегиональный-железнодорожный, Мэйнхеттен <-> Филлидельфия <-> Кантерлот (тонн)'] = {
        'Маршрут межрегиональный-железнодорожный, Мэйнхеттен <-> Филлидельфия <-> Кантерлот (тонно-километров)':(700 + 1600) / 0.9,
        '_-Работы погрузочно-разгрузочные с поезда (тонн)':1 * 2,
        }

metadict_detail['Маршрут межрегиональный-железнодорожный, Мэйнхеттен <-> Филлидельфия (тонн)'] = {
        'Маршрут межрегиональный-железнодорожный, Мэйнхеттен <-> Филлидельфия (тонно-километров)':700 / 0.9,
        '_-Работы погрузочно-разгрузочные с поезда (тонн)':1 * 2,
        }

metadict_detail['Маршрут межрегиональный-железнодорожный, Филлидельфия <-> Балтимэр (тонн)'] = {
        'Маршрут межрегиональный-железнодорожный, Филлидельфия <-> Балтимэр (тонно-километров)':500 / 0.9,
        '_-Работы погрузочно-разгрузочные с поезда (тонн)':1 * 2,
        }

metadict_detail['Маршрут межрегиональный-железнодорожный, Филлидельфия <-> Кантерлот <-> Ванхувер (тонн)'] = {
        'Маршрут межрегиональный-железнодорожный, Филлидельфия <-> Кантерлот <-> Ванхувер (тонно-километров)':(1600 + 2000) / 0.9,
        '_-Работы погрузочно-разгрузочные с поезда (тонн)':1 * 2,
        }

metadict_detail['Маршрут межрегиональный-железнодорожный, Филлидельфия <-> Кантерлот (тонн)'] = {
        'Маршрут межрегиональный-железнодорожный, Филлидельфия <-> Кантерлот (тонно-километров)':1600 / 0.9,
        '_-Работы погрузочно-разгрузочные с поезда (тонн)':1 * 2,
        }

metadict_detail['Маршрут межрегиональный-морской, Балтимэр <-> Мэйнхеттен (тонн)'] = {
        # Вдоль побережья.
        'Маршрут межрегиональный-морской, Балтимэр <-> Мэйнхеттен (тонно-километров)':1600 / 0.9,
        '_-Работы погрузочно-разгрузочные с барка (тонн)':1 * 2,
        }

metadict_detail['Маршрут межрегиональный-морской, Балтимэр <-> Филлидельфия (тонн)'] = {
        'Маршрут межрегиональный-морской, Балтимэр <-> Филлидельфия (тонно-километров)':1400 / 0.9,
        '_-Работы погрузочно-разгрузочные с барка (тонн)':1 * 2,
        }

metadict_detail['Маршрут межрегиональный-речной, Балтимэр <-> Кантерлот (тонн)'] = {
        # Местная "Миссисипи" до Хуффингтонских порогов, дальше по каналу к Кантерлотской дамбе.
        # От Балтимэра до Кантерлота 2200 км (как от Астрахани до Нижнего Новгорода)
        'Маршрут межрегиональный-речной, Балтимэр <-> Кантерлот (тонно-километров)':2200 / 0.7,
        '_-Работы погрузочно-разгрузочные с баржи (тонн)':1 * 2,
        }

#----
# Транспорт (международные торговые маршруты):

metadict_detail['Маршрут международный-речной, Филлидельфия <-> Фонтейн (тонн)'] = {
        # В основном сплав леса. Судоходная река регионального значения и каналы.
        'Маршрут международный-речной, Филлидельфия <-> Фонтейн (тонно-километров)':1100 / 0.7,
        '_-Работы погрузочно-разгрузочные с баржи (тонн)':1 * 2,
        }

metadict_detail['Маршрут международный-морской, Балтимэр <-> Грифус (тонн)'] = {
        # Мимо островов Грифонии.
        'Маршрут международный-морской, Балтимэр <-> Грифус (тонно-километров)':1900 / 0.95,
        '_-Работы погрузочно-разгрузочные с барка (тонн)':1 * 2,
        }

metadict_detail['Маршрут международный-морской, Балтимэр <-> Зевера (тонн)'] = {
        # Вдоль побережья материка.
        'Маршрут международный-морской, Балтимэр <-> Зевера (тонно-километров)':2000 / 0.9,
        '_-Работы погрузочно-разгрузочные с барка (тонн)':1 * 2,
        }

metadict_detail['Маршрут международный-морской, Балтимэр <-> Капо-Тун (тонн)'] = {
        'Маршрут международный-морской, Балтимэр <-> Капо-Тун (тонно-километров)':3000 / 0.9,
        '_-Работы погрузочно-разгрузочные с барка (тонн)':1 * 2,
        }

metadict_detail['Маршрут международный-морской, Ванхувер <-> Маэт-Кэр (тонн)'] = {
        # Через западный океан.
        'Маршрут международный-морской, Ванхувер <-> Маэт-Кэр (тонно-километров)':12000 / 0.95,
        '_-Работы погрузочно-разгрузочные с барка (тонн)':1 * 2,
        }

metadict_detail['Маршрут международный-морской, Ванхувер <-> Якияк (тонн)'] = {
        'Маршрут международный-морской, Ванхувер <-> Якияк (тонно-километров)':1300 / 0.9,
        '_-Работы погрузочно-разгрузочные с барка (тонн)':1 * 2,
        }

metadict_detail['Маршрут международный-морской, Ванхувер <-> мыс Вестхуф (тонн)'] = {
        'Маршрут международный-морской, Ванхувер <-> мыс Вестхуф (тонно-километров)':900 / 0.9,
        '_-Работы погрузочно-разгрузочные с барка (тонн)':1 * 2,
        }

metadict_detail['Маршрут международный-морской, Зевера --> Балтимэр (тонн)'] = {
        'Маршрут международный-морской, Зевера --> Балтимэр (тонно-километров)':2000 / 0.9,
        '_-Работы погрузочно-разгрузочные с барка (тонн)':1 * 2,
        }

metadict_detail['Маршрут международный-морской, Зевера --> Мэйнхеттен (тонн)'] = {
        'Маршрут международный-морской, Зевера --> Мэйнхеттен (тонно-километров)':3100 / 0.9,
        '_-Работы погрузочно-разгрузочные с барка (тонн)':1 * 2,
        }

metadict_detail['Маршрут международный-морской, Зенкори --> Балтимэр (тонн)'] = {
        'Маршрут международный-морской, Зенкори --> Балтимэр (тонно-километров)':1100 / 0.9,
        '_-Работы погрузочно-разгрузочные с барка (тонн)':1 * 2,
        }

metadict_detail['Маршрут международный-морской, Зенкори --> Мэйнхеттен (тонн)'] = {
        'Маршрут международный-морской, Зенкори --> Мэйнхеттен (тонно-километров)':2000 / 0.9,
        '_-Работы погрузочно-разгрузочные с барка (тонн)':1 * 2,
        }

metadict_detail['Маршрут международный-морской, Мэйнхеттен <-> Грифус (тонн)'] = {
        'Маршрут международный-морской, Мэйнхеттен <-> Грифус (тонно-километров)':2200 / 0.95,
        '_-Работы погрузочно-разгрузочные с барка (тонн)':1 * 2,
        }

metadict_detail['Маршрут международный-морской, Мэйнхеттен <-> Зевера (тонн)'] = {
        'Маршрут международный-морской, Мэйнхеттен <-> Зевера (тонно-километров)':3100 / 0.9,
        '_-Работы погрузочно-разгрузочные с барка (тонн)':1 * 2,
        }

metadict_detail['Маршрут международный-морской, Мэйнхеттен <-> Зенкори (тонн)'] = {
        'Маршрут международный-морской, Мэйнхеттен <-> Зенкори (тонно-километров)':2000 / 0.9,
        '_-Работы погрузочно-разгрузочные с барка (тонн)':1 * 2,
        }

metadict_detail['Маршрут международный-воздушный, Балтимэр <-> Зевера (тонн)'] = {
        'Маршрут международный-воздушный, Балтимэр <-> Зевера (тонно-километров)':2000 / 0.95,
        '_-Работы погрузочно-разгрузочные с планёра (тонн)':1 * 2,
        }

metadict_detail['Маршрут международный-воздушный, Зевера --> Балтимэр (тонн)'] = {
        'Маршрут международный-воздушный, Зевера --> Балтимэр (тонно-километров)':2000 / 0.95,
        '_-Работы погрузочно-разгрузочные с планёра (тонн)':1 * 2,
        }

metadict_detail['Маршрут международный-воздушный, Балтимэр <-> Зенкори (тонн)'] = {
        'Маршрут международный-воздушный, Балтимэр <-> Зенкори (тонно-километров)':1100 / 0.95,
        '_-Работы погрузочно-разгрузочные с планёра (тонн)':1 * 2,
        }

metadict_detail['Маршрут международный-воздушный, Зенкори --> Балтимэр (тонн)'] = {
        'Маршрут международный-воздушный, Зенкори --> Балтимэр (тонно-километров)':1100 / 0.95,
        '_-Работы погрузочно-разгрузочные с планёра (тонн)':1 * 2,
        }

metadict_detail['Маршрут международный-воздушный, Балтимэр <-> Капо-Тун (тонн)'] = {
        'Маршрут международный-воздушный, Балтимэр <-> Капо-Тун (тонно-километров)':3100 / 0.95,
        '_-Работы погрузочно-разгрузочные с планёра (тонн)':1 * 2,
        }

metadict_detail['Маршрут международный-воздушный, Ванхувер <-> Маэт-Кэр (тонн)'] = {
        'Маршрут международный-воздушный, Ванхувер <-> Маэт-Кэр (тонно-километров)':12000 / 0.95,
        '_-Работы погрузочно-разгрузочные с планёра (тонн)':1 * 2,
        }

metadict_detail['Маршрут международный-воздушный, Ванхувер <-> Якияк (тонн)'] = {
        'Маршрут международный-воздушный, Ванхувер <-> Якияк (тонно-километров)':1100 / 0.95,
        '_-Работы погрузочно-разгрузочные с планёра (тонн)':1 * 2,
        }

metadict_detail['Маршрут международный-воздушный, Балтимэр <-> Грифус (тонн)'] = {
        'Маршрут международный-воздушный, Балтимэр <-> Грифус (тонно-километров)':1700 / 0.95,
        '_-Работы погрузочно-разгрузочные с планёра (тонн)':1 * 2,
        }

metadict_detail['Маршрут международный-воздушный, Ванхувер <-> мыс Вестхуф (тонн)'] = {
        'Маршрут международный-воздушный, Ванхувер <-> мыс Вестхуф (тонно-километров)':900 / 0.95,
        '_-Работы погрузочно-разгрузочные с планёра (тонн)':1 * 2,
        }

metadict_detail['Маршрут международный-воздушный, Филлидельфия <-> Фонтейн (тонн)'] = {
        'Маршрут международный-воздушный, Филлидельфия <-> Фонтейн (тонно-километров)':1100 / 0.95,
        '_-Работы погрузочно-разгрузочные с планёра (тонн)':1 * 2,
        }


#----
# Грузоперевозки (группировка):

metadict_detail['Маршрут городской-трубопроводный, водозабор --> жилище (тонно-километров)'] = {
        'Трубопроводные грузоперевозки (тонно-километров)':1,
        }

metadict_detail['Маршрут городской-трубопроводный, жилище --> отстойники (тонно-километров)'] = {
        'Трубопроводные грузоперевозки (тонно-километров)':1,
        }

metadict_detail['Маршрут приусадебный-вьючный, огород --> амбар (тонно-километров)'] = {
        'Вьючные грузоперевозки (тонно-километров)':1,
        }

metadict_detail['Маршрут приусадебный-вьючный, колодец --> жилище (тонно-километров)'] = {
        'Вьючные грузоперевозки воды (тонно-километров)':1,
        }

metadict_detail['Маршрут сельский-вьючный, плантация --> производство (Зебрика) (тонно-километров)'] = {
        'Вьючные грузоперевозки (Зебрика) (тонно-километров)':1,
        }

metadict_detail['Маршрут сельский-вьючный, сад --> амбар (тонно-километров)'] = {
        'Вьючные грузоперевозки (тонно-километров)':1,
        }

metadict_detail['Маршрут сельский-вьючный, ресторан --> потребители (тонно-километров)'] = {
        'Вьючные грузоперевозки (тонно-километров)':1,
        }

metadict_detail['Маршрут кантонный-гужевой, плантация --> производство (Зебрика) (тонно-километров)'] = {
        'Гужевые грузоперевозки (Зебрика) (тонно-километров)':1,
        }

metadict_detail['Маршрут кантонный-гужевой, селение --> городок (тонно-километров)'] = {
        'Гужевые грузоперевозки (тонно-километров)':1,
        }

metadict_detail['Маршрут окружной-гужевой, городок <-> город (тонно-километров)'] = {
        'Гужевые грузоперевозки (тонно-километров)':1,
        }

metadict_detail['Маршрут приусадебный-гужевой, жилище --> свалка (тонно-километров)'] = {
        'Гужевые грузоперевозки мусора (тонно-километров)':1,
        }

metadict_detail['Маршрут приусадебный-гужевой, колодец --> жилище (тонно-километров)'] = {
        'Гужевые грузоперевозки воды (тонно-километров)':1,
        }

metadict_detail['Маршрут сельский-гужевой, водозабор --> производство (тонно-километров)'] = {
        'Гужевые грузоперевозки (тонно-километров)':1,
        }

metadict_detail['Маршрут сельский-гужевой, пашня --> амбар (тонно-километров)'] = {
        'Гужевые грузоперевозки (тонно-километров)':1,
        }

metadict_detail['Маршрут сельский-гужевой, плантация --> производство (Зебрика) (тонно-километров)'] = {
        'Гужевые грузоперевозки (Зебрика) (тонно-километров)':1,
        }

metadict_detail['Маршрут сельский-гужевой, стройплощадка --> отвал (тонно-километров)'] = {
        # Здесь используются водимые пегасами телеги:
        'Гужевые грузоперевозки (тонно-километров)':1,
        }

metadict_detail['Маршрут кантонный-речной, плантация --> производство (Зебрика) (тонно-километров)'] = {
        'Речные грузоперевозки (Зебрика) (тонно-километров)':1,
        }

metadict_detail['Маршрут кантонный-речной, селение --> городок (тонно-километров)'] = {
        'Речные грузоперевозки (тонно-километров)':1,
        }

metadict_detail['Маршрут международный-речной, Филлидельфия <-> Фонтейн (тонно-километров)'] = {
        'Речные грузоперевозки (тонно-километров)':1,
        }

metadict_detail['Маршрут межрегиональный-речной, Балтимэр <-> Кантерлот (тонно-километров)'] = {
        'Речные грузоперевозки (тонно-километров)':1,
        }

metadict_detail['Маршрут окружной-речной, городок <-> город (тонно-километров)'] = {
        'Речные грузоперевозки (тонно-километров)':1,
        }

metadict_detail['Маршрут региональный-речной, город <-> мегаполис (тонно-километров)'] = {
        'Речные грузоперевозки (тонно-километров)':1,
        }

metadict_detail['Маршрут межрегиональный-железнодорожный, Кантерлот <-> Лас-Пегасус (тонно-километров)'] = {
        'Железнодорожные грузоперевозки (тонно-километров)':1,
        }

metadict_detail['Маршрут межрегиональный-железнодорожный, Кантерлот <-> Лас-Пегасус <-> Ванхувер (тонно-километров)'] = {
        'Железнодорожные грузоперевозки (тонно-километров)':1,
        }

metadict_detail['Маршрут межрегиональный-железнодорожный, Кантерлот <-> Эпплуза (тонно-километров)'] = {
        'Железнодорожные грузоперевозки (тонно-километров)':1,
        }

metadict_detail['Маршрут межрегиональный-железнодорожный, Мэйнхеттен <-> Филлидельфия (тонно-километров)'] = {
        'Железнодорожные грузоперевозки (тонно-километров)':1,
        }

metadict_detail['Маршрут межрегиональный-железнодорожный, Мэйнхеттен <-> Филлидельфия <-> Балтимэр (тонно-километров)'] = {
        'Железнодорожные грузоперевозки (тонно-километров)':1,
        }

metadict_detail['Маршрут межрегиональный-железнодорожный, Мэйнхеттен <-> Филлидельфия <-> Кантерлот (тонно-километров)'] = {
        'Железнодорожные грузоперевозки (тонно-километров)':1,
        }

metadict_detail['Маршрут межрегиональный-железнодорожный, Филлидельфия <-> Балтимэр (тонно-километров)'] = {
        'Железнодорожные грузоперевозки (тонно-километров)':1,
        }

metadict_detail['Маршрут межрегиональный-железнодорожный, Филлидельфия <-> Кантерлот (тонно-километров)'] = {
        'Железнодорожные грузоперевозки (тонно-километров)':1,
        }

metadict_detail['Маршрут межрегиональный-железнодорожный, Филлидельфия <-> Кантерлот <-> Ванхувер (тонно-километров)'] = {
        'Железнодорожные грузоперевозки (тонно-километров)':1,
        }

metadict_detail['Маршрут окружной-железнодорожный, городок <-> город (тонно-километров)'] = {
        'Железнодорожные грузоперевозки (тонно-километров)':1,
        }

metadict_detail['Маршрут региональный-железнодорожный, Хуффингтон --> Кантерлот (тонно-километров)'] = {
        'Железнодорожные грузоперевозки (тонно-километров)':1,
        }

metadict_detail['Маршрут региональный-железнодорожный, Сталлионград --> Мэйнхеттен (тонно-километров)'] = {
        'Железнодорожные грузоперевозки (тонно-километров)':1,
        }

metadict_detail['Маршрут региональный-железнодорожный, Троттингем --> Филлидельфия (тонно-километров)'] = {
        'Железнодорожные грузоперевозки (тонно-километров)':1,
        }

metadict_detail['Маршрут региональный-железнодорожный, город <-> мегаполис (тонно-километров)'] = {
        'Железнодорожные грузоперевозки (тонно-километров)':1,
        }

metadict_detail['Маршрут международный-морской, Балтимэр <-> Грифус (тонно-километров)'] = {
        'Морские грузоперевозки (тонно-километров)':1,
        }

metadict_detail['Маршрут международный-морской, Балтимэр <-> Зевера (тонно-километров)'] = {
        'Морские грузоперевозки (тонно-километров)':1,
        }

metadict_detail['Маршрут международный-морской, Балтимэр <-> Капо-Тун (тонно-километров)'] = {
        'Морские грузоперевозки (тонно-километров)':1,
        }

metadict_detail['Маршрут международный-морской, Ванхувер <-> Маэт-Кэр (тонно-километров)'] = {
        'Морские грузоперевозки (тонно-километров)':1,
        }

metadict_detail['Маршрут международный-морской, Ванхувер <-> Якияк (тонно-километров)'] = {
        'Морские грузоперевозки (тонно-километров)':1,
        }

metadict_detail['Маршрут международный-морской, Ванхувер <-> мыс Вестхуф (тонно-километров)'] = {
        'Морские грузоперевозки (тонно-километров)':1,
        }

metadict_detail['Маршрут международный-морской, Зевера --> Балтимэр (тонно-километров)'] = {
        'Морские грузоперевозки (тонно-километров)':1,
        }

metadict_detail['Маршрут международный-морской, Зевера --> Мэйнхеттен (тонно-километров)'] = {
        'Морские грузоперевозки (тонно-километров)':1,
        }

metadict_detail['Маршрут международный-морской, Зенкори --> Балтимэр (тонно-километров)'] = {
        'Морские грузоперевозки (тонно-километров)':1,
        }

metadict_detail['Маршрут международный-морской, Зенкори --> Мэйнхеттен (тонно-километров)'] = {
        'Морские грузоперевозки (тонно-километров)':1,
        }

metadict_detail['Маршрут международный-морской, Мэйнхеттен <-> Грифус (тонно-километров)'] = {
        'Морские грузоперевозки (тонно-километров)':1,
        }

metadict_detail['Маршрут международный-морской, Мэйнхеттен <-> Зевера (тонно-километров)'] = {
        'Морские грузоперевозки (тонно-километров)':1,
        }

metadict_detail['Маршрут международный-морской, Мэйнхеттен <-> Зенкори (тонно-километров)'] = {
        'Морские грузоперевозки (тонно-километров)':1,
        }

metadict_detail['Маршрут межрегиональный-морской, Балтимэр <-> Мэйнхеттен (тонно-километров)'] = {
        'Морские грузоперевозки (тонно-километров)':1,
        }

metadict_detail['Маршрут межрегиональный-морской, Балтимэр <-> Филлидельфия (тонно-километров)'] = {
        'Морские грузоперевозки (тонно-километров)':1,
        }

metadict_detail['Маршрут кантонный-воздушный, склад --> потребители (тонно-километров)'] = {
        'Воздушные грузоперевозки курьерские (тонно-километров)':1,
        }

metadict_detail['Маршрут окружной-воздушный, склад --> потребители (тонно-километров)'] = {
        'Воздушные грузоперевозки курьерские (тонно-километров)':1,
        }

metadict_detail['Маршрут региональный-воздушный, склад --> потребители (тонно-километров)'] = {
        'Воздушные грузоперевозки курьерские (тонно-километров)':1,
        }

metadict_detail['Маршрут международный-воздушный, Зевера --> Балтимэр (тонно-километров)'] = {
        'Воздушные грузоперевозки (тонно-километров)':1,
        }

metadict_detail['Маршрут международный-воздушный, Зенкори --> Балтимэр (тонно-километров)'] = {
        'Воздушные грузоперевозки (тонно-километров)':1,
        }

metadict_detail['Маршрут международный-воздушный, Балтимэр <-> Грифус (тонно-километров)'] = {
        'Воздушные грузоперевозки (тонно-километров)':1,
        }

metadict_detail['Маршрут международный-воздушный, Балтимэр <-> Зевера (тонно-километров)'] = {
        'Воздушные грузоперевозки (тонно-километров)':1,
        }

metadict_detail['Маршрут международный-воздушный, Балтимэр <-> Зенкори (тонно-километров)'] = {
        'Воздушные грузоперевозки (тонно-километров)':1,
        }

metadict_detail['Маршрут международный-воздушный, Балтимэр <-> Капо-Тун (тонно-километров)'] = {
        'Воздушные грузоперевозки (тонно-километров)':1,
        }

metadict_detail['Маршрут международный-воздушный, Ванхувер <-> Маэт-Кэр (тонно-километров)'] = {
        'Воздушные грузоперевозки (тонно-километров)':1,
        }

metadict_detail['Маршрут международный-воздушный, Ванхувер <-> Якияк (тонно-километров)'] = {
        'Воздушные грузоперевозки (тонно-километров)':1,
        }

metadict_detail['Маршрут международный-воздушный, Ванхувер <-> мыс Вестхуф (тонно-километров)'] = {
        'Воздушные грузоперевозки (тонно-километров)':1,
        }

metadict_detail['Маршрут международный-воздушный, Филлидельфия <-> Фонтейн (тонно-километров)'] = {
        'Воздушные грузоперевозки (тонно-километров)':1,
        }

#----
# Грузоперевозки (категория --> вид транспорта)

metadict_detail['Трубопроводные грузоперевозки (тонно-километров)'] = {
        # TODO: Трубопроводные грузоперевозки. Заглушка. Допилить.
            # Здесь нужно будет рассчитать расход энергии насосами.
            # Сюда можно привязать обслуживание трубопроводов.
            # Кроме напорных есть безнапорные трубопроводы.
        }

metadict_detail['Воздушные грузоперевозки (тонно-километров)'] = {
        # TODO: Блум убеждена, что воздушные грузоперевозки в Эквестрии выгоднее, чем по дорогам.
            # Да и расчёты это подтверждают. Нужно только расходы на обслуживание планёра уточнить.
            # Планёр с 18 пегасами в 1.33 раза эффективнее, чем гужевые перевозки по дорогам.
            # Курьерская доставка тоже оказалась очень дешёвой.
        # Тяжёлый планёр (18 пегасов) летит со скоростью 80 км/час, несёт 3 тонны груза:
        # Лёгкий планёр (2 пегаса) летит со скоростью 80 км/час, несёт 0.3 тонны груза:
        # Лёгкие планёры могут приземляться без взлётной полосы.
        'Воздушные грузоперевозки, планёр тяжёлый (тонно-километров)':0.9,
        'Воздушные грузоперевозки, планёр лёгкий (тонно-километров)':0.1,
        '|===Грузооборот воздушных путей (тонно-километров)':1,
        }

metadict_detail['Воздушные грузоперевозки курьерские (тонно-километров)'] = {
        # Доставка горячей пищи из ресторанов и почта. От 10 минут до 1 часа полёта.
        'Воздушные грузоперевозки, планёр лёгкий (тонно-километров)':1,
        '|===Грузооборот воздушных путей (тонно-километров)':1,
        }

metadict_detail['Железнодорожные грузоперевозки (тонно-километров)'] = {
        'Железнодорожные грузоперевозки, поезд товарный (тонно-километров)':1,
        '|===Грузооборот железных дорог (тонно-километров)':1,
        }

metadict_detail['Морские грузоперевозки (тонно-километров)'] = {
        # TODO: Проблема, простой (на разгрузке) учитывается для всех как для барка.
            # Поэтому число барков во флоте увеличивается, а других кораблей падает.
        'Морские грузоперевозки, барк стальной (тонно-километров)':0.3,
        'Морские грузоперевозки, барк деревянный (тонно-километров)':0.4,
        'Морские грузоперевозки, бриг деревянный (тонно-километров)':0.3,
        '|===Грузооборот морских путей (тонно-километров)':1,
        }

metadict_detail['Речные грузоперевозки (тонно-километров)'] = {
        # TODO: Кроме речных барж есть мелкие судёнышки и плоты.
            # https://ru.wikisource.org/wiki/ЭСБЕ/Каюк
            # https://ru.wikisource.org/wiki/ЭСБЕ/Бот,_речное_судно
            # https://ru.wikisource.org/wiki/ЭСБЕ/Бриг,_речное_судно
            # https://ru.wikisource.org/wiki/ЭСБЕ/Галера,_речное_судно
        # Грузооборот речного флота (РФ, 2014 год) -- 72 млрд. тонно-километров.
            # - Строительные грузы и цемент – 58.3%
            # - Нефть и нефтепродукты – 14.3%
            # - Лесные грузы – 5%
            # - Зерно и продукты помола – 3.6%
            # - Металлы и металлолом – 2.8%
            # - Каменный уголь и кокс – 2.3%
            # - Химические и минеральные удобрения – 1.6%
            # - Прочие грузы – 12.1%
        'Речные грузоперевозки, баржа (тонно-километров)':1,
        '|===Грузооборот речных путей (тонно-километров)':1,
        }

metadict_detail['Речные грузоперевозки (Зебрика) (тонно-километров)'] = {
        'Речные грузоперевозки, баржа (Зебрика) (тонно-километров)':1,
        '|===Грузооборот речных путей (тонно-километров)':1,
        }

metadict_detail['Гужевые грузоперевозки (тонно-километров)'] = {
        # Пегасы таскают телеги со скоростью автомобилей, земные запрягаются очень редко.
        'Гужевые грузоперевозки, телега пегасья (тонно-километров)':0.95,
        'Гужевые грузоперевозки, телега конная (тонно-километров)':0.05,
        '|===Грузооборот шоссейных дорог (тонно-километров)':1,
        }

metadict_detail['Гужевые грузоперевозки (Зебрика) (тонно-километров)'] = {
        'Гужевые грузоперевозки, телега конная (Зебрика) (тонно-километров)':1,
        '|===Грузооборот грунтовых дорог (тонно-километров)':1,
        }

metadict_detail['Гужевые грузоперевозки воды (тонно-километров)'] = {
        # Перевозки менее километра, пегасов никто не дёргает.
        'Гужевые грузоперевозки, телега-водовоз конная (тонно-километров)':1,
        '|===Грузооборот грунтовых дорог (тонно-километров)':1,
        }

metadict_detail['Гужевые грузоперевозки мусора (тонно-километров)'] = {
        # TODO: здесь лучше использовать пегасьи телеги, а то многовато получается для земных:
            # Маршрут сельский-гужевой, стройплощадка --> отвал (тонно-километров).... | 124,616,252
        'Гужевые грузоперевозки, телега-самосвал конная (тонно-километров)':1,
        '|===Грузооборот грунтовых дорог (тонно-километров)':1,
        }

metadict_detail['Вьючные грузоперевозки (тонно-километров)'] = {
        # Вьюки пони не таскают, гораздо удобнее в тележку нагрузить.
        # Как вариант, те же 50 килограммов можно переносить в корзине на спине.
        # Как вариант, вспомни профессию крючника -- корзины на коромысле с крюками.
        'Вьючные грузоперевозки, тележка конная (тонно-километров)':1,
        '|===Грузооборот грунтовых дорог (тонно-километров)':1,
        }

metadict_detail['Вьючные грузоперевозки (Зебрика) (тонно-километров)'] = {
        'Вьючные грузоперевозки, тележка конная (Зебрика) (тонно-километров)':1,
        '|===Грузооборот грунтовых дорог (тонно-километров)':1,
        }

metadict_detail['Вьючные грузоперевозки воды (тонно-километров)'] = {
        'Вьючные грузоперевозки, тележка-водовоз конная (тонно-километров)':1,
        '|===Грузооборот грунтовых дорог (тонно-километров)':1,
        }

#----
# Грузоперевозки (трудозатраты):
    # Формула тяги лошадей:
        # P = Q/9+12,
        # где:
        # Р — сила тяги (кгс);
        # Q — масса лошади (кг);
        # 12 — постоянная величина.
    # Тяговое усилие:
        # Лошадиная сила (0.75 кВт) = 75 кгс × м/с (0.9-1.1 м/с, 3.6 км/час)
        # Тяжеловоз 900 кг = 90 кгс (0.75 кВт)
        # Першерон 500 кг = 50 кгс (0.5 кВт)
        # Лошадь 300 кг = 45 кгс
        # Пони 70 кг = 20 кгс (до 0.2 кВт)
    # Необходимая тяга:
        # 2 кгс/тонна -- баржа в канале при 3.6 км/час
        # 6 кгс/тонна -- баржа в канале при 7.2 км/час
        # 30 кгс/тонна -- гладкая, твёрдая, сухая дорога.
        # 150 кгс/тонна -- неровная земляная поверхность.
        # 210-300 кгс/тонна -- песчанная или болотистая почва.
    # Парусное судно:
        # 3500 часов/год, 6 узлов/час
        # 1 HP-hr per 45 ton-miles, 50% КПД = 1.254 ГДж/тонна-год
        # Dewhurst, J.F. America’s Needs and Resources, 1955
        # https://www.mdpi.com/1996-1073/7/12/7955

metadict_detail['Воздушные грузоперевозки, планёр тяжёлый (тонно-километров)'] = {
        # Тяжёлый планёр (18 пегасов) летит со скоростью 80 км/час, несёт 3 тонны груза:
        # Лёгкий планёр (1 пегас) летит со скоростью 80 км/час, несёт 0.1 тонны груза:
        '_-Путь грузового планёра, тяжёлого, 3 тонны, 80 км/час, 540 кВт (часов)':1 / (80 * 3),
        }

metadict_detail['Воздушные грузоперевозки, планёр лёгкий (тонно-километров)'] = {
        # Для мелких грузов, почты, а также поселений, где негде приземлить тяжёлый планёр.
        '_-Путь грузового планёра, лёгкого, 0.3 тонны, 80 км/час, 60 кВт (часов)':1 / (80 * 0.3),
        }

metadict_detail['Железнодорожные грузоперевозки, поезд товарный (тонно-километров)'] = {
        # В среднем поезд загружен наполовину:
            # https://f-husainov.livejournal.com/520006.html
            # https://f-husainov.livejournal.com/611645.html
        # Мощность паровозов:
            # 1 пегас = 30 кВт-час
            # 1 кВт-час = 1.4 килограмма каменного угля
            # Горизонтальный путь, 50 тонно-километров/час = 0.4 кВт-час
            # Подъём в 5 на 1000 метров, 50 тонно-километров/час = 1.1 кВт
        # Работа поездов:
            # Товарный поезд с 33 вагонами (400 тонн) -- 640 кВт
            # Пассажирский поезд с 8+2 вагонами (150 тонн) -- 210 кВт
            # Курьерский поезд с 8+2 вагонами, 100 км-час (200 тонн) -- 710 кВт
        # Товарный поезд идёт со скоростью 50 км/час и тащит 400 тонн груза и собственного веса.
        # В среднем перевозят 10 тонн груза/вагон, 250 тонн/поезд.
        '_-Путь грузового поезда, 250 тонн, 50 км/час 640 кВт-час (часов)':1 / (50 * 250),
        }

metadict_detail['Морские грузоперевозки, барк стальной (тонно-километров)'] = {
        # Барк идёт со скоростью 7 узлов (13 км/час) и тащит 1400 тонн груза:
        # http://wiki.wargaming.net/ru/Navy:Крузенштерн_(1926)
        # Эксплуатационно-экономические показатели и нормативы работы транспортного флота
        # Продолжительность рейса Тр = 20 суток,
            # - в том числе ходовое время Тхр = 9 сут.;
            # - стояночное время -Т = 11 сут.,
            # - из них под фузовыми операциями Тгт|рр = 9,5 сут. 
        # Данные по учебным фрегатам серии "Дружба" (Паллада и Херсонес):
            # 10 узлов, 838 кВт: 838 / (10 × 1.852/3.6) × 0.7 = 114 килоньютонов
            # 11 узлов, 959 кВт: 959 / (11 × 1.852/3.6) × 0.7 = 118.6 кН 
            # 12 узлов, 1104 кВт: 1104 / (12 × 1.852/3.6) × 0.7 = 125.2 кН
            # 12.3 узлов, 1128 кВт: 1128 / (12.3 × 1.852/3.6) × 0.7 = 124.8 кН
            # Где 0.7, это КПД винта (сила движителя равна сопротивлению воды)
        # При 720 кВт барк идёт на 9 узлов, но пегасов одна смена, поэтому 7 узлов.
        '_-Путь грузового барка, 1400 тонн, 13 км/час, 720 кВт (часов)':1 / (13 * 1400),
        }

metadict_detail['Морские грузоперевозки, барк деревянный (тонно-километров)'] = {
        # 7 узлов, 360 кВт: 360 / (7*1.852/3.6) * 0.7 = 70 килоньютонов
        # Парусность -- 1878 м² (1.6 м²/т водоизмещения):
            # №  | Ветер      | Давление на паруса | Сила  | Скорость
            # -- | ---------- | ------------------ | ----- | --------
            # 1  | Тихий      |  0.2 тонна-сил     | 2 кН  | 1 узлов
            # 2  | Лёгкий     |  1.0               | 10    | 3
            # 3  | Слабый     |  3.4               | 34    | 6
            # 4  | Умеренный* |  7.7               | 77    | 9
            # 5  | Свежий     | 12.4               | 124   | 9-11
            # 6  | Сильный    | 22.5               | 225   | 9-13
            # Деревянный рангоут выдерживает 8 тонн, далее начинают снимать паруса.
            # Данные барка "Крузенштерн" с поправкой на парусность в 1878 м²
            # https://flot.com/publications/books/shelf/vlasov/19.htm
        '_-Путь грузового барка, 600 тонн, 13 км/час, 360 кВт (часов)':1 / (13 * 600),
        }

metadict_detail['Морские грузоперевозки, бриг деревянный (тонно-километров)'] = {
        # 7 узлов, 240 кВт: 240 / (7 × 1.852/3.6) × 0.7 = 47 килоньютонов
        # Парусность -- 1000 м² (1.6 м²/т водоизмещения):
        '_-Путь грузового брига, 300 тонн, 13 км/час, 240 кВт (часов)':1 / (13 * 300),
        }

metadict_detail['Речные грузоперевозки, баржа (тонно-километров)'] = {
        # TODO: скорость баржи 3.6 км/час (2 узла) мощность 6 кВт (один тяговой пегас)
        # Буксиры, 63% (60 кВТ, 1.7-2.9 узла против течения, 100 км/сутки, 2-7 барж, 2400-9800 тонн)
            # Оптимальная скорость буксировки (по сопротивлению воды) -- 0.4-1.2 м/с (0.76-2.3 узла)
            # С увеличением скорости 1.9 узла --> 3.9 узла сопротивление возрастает втрое
            # Скорость течения реки Волга, Днепр -- 1 м/с летом, 2 м/с в половодье.
            # Скорость течения реки Ока, Москва -- 0.6 м/с летом, 2 м/с в половодье.
            # Волжские пароходы снова уделывают всех. Они таскали целые поезда барж!
            # Одна тяжёлая лошадь (0.75 кВт) со скоростью 3-5 км/час тащит баржу 30-50 тонн
            # https://img-fotki.yandex.ru/get/66521/2118499.156/0_f4cce_8c006ca4_XL.png
            # "Энергия и цивилизация" Вацлав Смил
        # 2.3 узла, 30 кВт: 30 / (2.3 × 1.852 / 3.6) = 25 кН (2500 кгс)
        # 2 узла, 6 кВт: 6 / (2 × 1.852 / 3.6) = 6 кН (600 кгс)
        # Баржа идёт со скоростью 2.3 узла (4.3 км/час) и тащит 200 тонн груза:
        '_-Путь грузовой баржи, 200 тонн, 4.3 км/час, 60 кВт (часов)':1 / (4.3 * 200),
        }

metadict_detail['Речные грузоперевозки, баржа (Зебрика) (тонно-километров)'] = {
        # Баржа идёт со скоростью 2.3 узла (4.3 км/час) и тащит 200 тонн груза:
        # Стоимость получается (без цены баржи) -- 2.2 бита/1000 ткм, как у пароходов на Волге.
        '_-Путь грузовой баржи, 200 тонн, 4.3 км/час, 60 кВт (часов)':1 / (4.3 * 200),
        }

metadict_detail['Гужевые грузоперевозки, телега пегасья (тонно-километров)'] = {
        # Пегас тащит телегу по щебёночному шоссе со скоростью 20 км/час и несёт 0.5 тонны груза.
            # Truck, 5 ton 6 м/с (21.6 км/час), 11 тонн, 330-1650 кгс, 20-99 кВт (до 200 кВт)
            # Пегасья телега 6 м/с (21.6 км/час), 0.7 тонны, 22-105 кгс, 1.2-6 кВт (до 12 кВт)
            # Двуконный экипаж 3 м/с (10.8 км/час), 0.7 тонны, 22-105 кгс, 0.7-3.2 кВт (до 7 кВт)
            # Конная повозка 1 м/с (3.6 км/час), 0.7 тонн, 22-105 кгс, 0.2-1 кВт (до 2 кВт)
            # https://ru.wikisource.org/wiki/ЭСБЕ/Экипажное_производство
        # Аварийность пегасьих телег:
            # ||Транспорт колёсный грузовой (телега, 0.5 тонны груза) | 628,781
            # --Путь грузовой телеги (телега/год) (километров) | 10,553
            # Пробег электросамокатов (2024 год, Россия) -- 0.35-1 млрд км (1 смерть на 19 млн км)
            # Пробег автомобилей (2023 год, Россия) -- 950 млрд км (1 смерть на 75 млн км)
            # Пробег телег -- 6.64 млрд км (88-350 смертей/год, 970-3900 ранений/год)
        # Пегасьи телеги в 10 раз менее эффективны, чем речные перевозки (без учёта стоимости барж).
        '_-Путь грузовой телеги, 0.5 тонны, 20 км/час, 30 кВт (часов)':1 / (20 * 0.5),
        }

metadict_detail['Гужевые грузоперевозки, телега конная (тонно-километров)'] = {
        # Пара пони покрепче тащат воз со скоростью 5 км/час, 0.3 тонны груза.
        # Это в 13 раз менее эффективно, чем работа пегаса. Как одноконная повозка.
        # Это в 6 раз менее эффективно, чем воздушные грузоперевозки.
        # Конные грузоперевозки (1891 год, Варшава)
            # Одноконная повозка на 0.7 тонны, 0.4 тонны полезной нагрузки
            # 280k четвертей ржи на 31 лошади = 926 тонн/год-лошадь, 3 тонны/день-лошадь
            # Это 300 дней по 15 км за 4 часа = 926 тонн × 0.4 × 15 км = 5556 ткм/лошадь = 6 ткм/тонна
            # - Зерно подъёмными лошадями (0.4 тонны на 15 км) -- 18.5 ткм/день
            # - Грузы вятскими лошадьми (7.62-14.2 км/час, 46-85 км/день) -- до 23-48 ткм/день
            # - Лес тяжеловозами (1.6-1.9 тонны на 8 км) -- 12.5-15.4 ткм/день
            # Конная повозка 1 м/с (3.6 км/час), 0.7 тонн, 22-105 кгс, 0.2-1 кВт (до 2 кВт)
            # Энергозатраты 300×11.2 КЕ + 65×6.7 КЕ = 3800 кормовых единиц (1680 кг овса, 5300 кг сена)
            # Энергобаланс перевозки: 3800 / 5556 = 0.7 кормовых единиц/ткм (овса 0.3 кг/ткм)
            # Лошадь съедает 100 кг овса и 333 кг сена отвозя тонну грузов на 333 километра
            # https://ru.wikipedia.org/wiki/Подъёмная_лошадь
            # https://web.archive.org/web/20190210224602/http://viatkaloshadka.narod.ru/gruz.html
        '_-Путь грузовой телеги, 0.3 тонны, 5 км/час (часов)':1 / (5 * 0.3),
        }

metadict_detail['Гужевые грузоперевозки, телега-водовоз конная (тонно-километров)'] = {
        # Ничего примечательного в водовозках нет, но так в выводе их видно отдельно.
        '_-Путь грузовой телеги-водовозки, 0.3 тонны, 5 км/час (часов)':1 / (5 * 0.3),
        }

metadict_detail['Гужевые грузоперевозки, телега-самосвал конная (тонно-километров)'] = {
        '_-Путь грузовой телеги-самосвала, 0.3 тонны, 5 км/час (часов)':1 / (5 * 0.3),
        }

metadict_detail['Гужевые грузоперевозки, телега конная (Зебрика) (тонно-километров)'] = {
        '_-Путь грузовой телеги, 0.3 тонны, 5 км/час (Зебрика) (часов)':1 / (5 * 0.3),
        }

metadict_detail['Вьючные грузоперевозки, тележка конная (тонно-километров)'] = {
        # Пони рысит со скоростью 5 км/час и тащит 0.05 тонны груза на тележке:
        # Рысь и галоп для лошадей (12+ км/час) более эффективны энергетически.
        # Ручная тележка (Китай, Хань) -- 0.9 метра колесо, 150 кг груза над осью.
        '_-Путь грузовой тележки, 0.05 тонны, 5 км/час (часов)':1 / (5 * 0.05),
        }

metadict_detail['Вьючные грузоперевозки, тележка-водовоз конная (тонно-километров)'] = {
        # Медленнее, но тащит 100 литров.
        '_-Путь грузовой тележки-водовозки, 0.1 тонны, 3 км/час (часов)':1 / (3 * 0.1),
        }

metadict_detail['Вьючные грузоперевозки, тележка конная (Зебрика) (тонно-километров)'] = {
        '_-Путь грузовой тележки, 0.05 тонны, 5 км/час (Зебрика) (часов)':1 / (5 * 0.05),
        }

#----
# Транспортные средства (пассажирские):

metadict_detail['_-Путь пассажирского планёра, лёгкого (часов/пассажир)'] = {
        # 2 пегаса. До 4 пассажиров, среднее заполнение 0.5
        '_-Путь пассажирского планёра, лёгкого, 4 пассажира, 80 км/час, 60 кВт (часов)':1 / (4 * 0.5),
        '-Пассажирооборот воздушных путей (пассажиро-километров)':80,
        }

metadict_detail['_-Путь пассажирского планёра, тяжёлого (часов/пассажир)'] = {
        # 18 пегасов. До 36 пассажиров, среднее заполнение 0.75
        '_-Путь пассажирского планёра, тяжёлого, 36 пассажиров, 80 км/час, 540 кВт (часов)':1 / (36 * 0.75),
        '-Пассажирооборот воздушных путей (пассажиро-километров)':80,
        }

metadict_detail['_-Путь пассажирского поезда (часов/пассажир)'] = {
        # TODO: ты не учитываешь простой пассажирского поезда.
        # 36 мест/вагон, 8+2 вагонов/поезд, 288 пассажиров, заполнение 0.75
        '_-Путь пассажирского поезда, 288 пассажиров, 100 км/час, 710 кВт-час (часов)':1 / (288 * 0.75),
        '-Пассажирооборот железнодорожных путей (пассажиро-километров)':100,
        }

metadict_detail['_-Путь пассажирского барка (часов/пассажир)'] = {
        # 288 пассажиров, заполнение 0.75
        '_-Путь пассажирского барка, 288 пассажиров, 13 км/час, 720 кВт (часов)':1 / (288 * 0.75),
        '-Пассажирооборот морских путей (пассажиро-километров)':13,
        }

metadict_detail['_-Путь пассажирского брига (часов/пассажир)'] = {
        # 108 пассажиров, заполнение 0.75
        '_-Путь пассажирского брига, 108 пассажиров, 13 км/час, 240 кВт (часов)':1 / (108 * 0.75),
        '-Пассажирооборот морских путей (пассажиро-километров)':13,
        }

metadict_detail['_-Путь пассажирской баржи (часов/пассажир)'] = {
        # TODO: Правь баржи. Как запихнуть 54-108 копытных в судно с габаритами 30x5 (150 м²)
            # Региональное путешествие 3 дня, до Кантерлота не меньше недели.
            # Нам нужны уютные многоэтажные баржи (но они не вписываются в габарит шлюзов)
        # 108 пассажиров, заполнение 0.5
        # Пениши (длина 32 м; ширина 4.9 м; осадка 0.35-2.15 м; груз до 250 тонн)
        '_-Путь пассажирской баржи, 108 пассажиров, 9 км/час, 120 кВт (часов)':1 / (108 * 0.5),
        '-Пассажирооборот речных путей (пассажиро-километров)':9,
        }
